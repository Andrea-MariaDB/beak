# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno and run tests across stable and canary builds on Windows, Ubuntu and macOS.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ${{ matrix.os }} # runs a test on Ubuntu, Windows and macOS

    strategy:
      matrix:
        deno: ["v1.x", "canary"]
        os: [macOS-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@4a4e59637fa62bd6c086a216c7e4c5b457ea9e79
        with:
          deno-version: ${{ matrix.deno }} # tests across multiple Deno versions

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      # - name: Verify formatting
      #   run: deno fmt --check

      - name: Run linter
        run: deno lint

      - name: Cache dependencies
        run: deno cache deps.ts

      - name: Run tests
        run: deno test -A --unstable
        - name: Cache
  uses: actions/cache@v2.1.6
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    - name: Setup Node.js environment
  uses: actions/setup-node@v2.1.5
  with:
    # Set always-auth in npmrc
    always-auth: # optional, default is false
    # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
    node-version: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
    registry-url: # optional
    # Optional scope for authenticating against scoped registries
    scope: # optional
    # Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
    token: # optional, default is ${{ github.token }}
    # Deprecated. Use node-version instead. Will not be supported after October 1, 2019
    version: # optional
    - name: Setup Go environment
  uses: actions/setup-go@v2.1.3
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges.
    go-version: # optional
    # Whether to download only stable versions
    stable: # optional, default is true
    # Used to pull node distributions from go-versions.  Since there's a default, this is typically not supplied by the user.
    token: # optional, default is ${{ github.token }}
    - name: Close Stale Issues
  uses: actions/stale@v3.0.19
  with:
    # Token for the repository. Can be passed in using `{{ secrets.GITHUB_TOKEN }}`.
    repo-token: # optional, default is ${{ github.token }}
    # The message to post on the issue when tagging it. If none provided, will not mark issues stale.
    stale-issue-message: # optional
    # The message to post on the pull request when tagging it. If none provided, will not mark pull requests stale.
    stale-pr-message: # optional
    # The message to post on the issue when closing it. If none provided, will not comment when closing an issue.
    close-issue-message: # optional
    # The message to post on the pull request when closing it. If none provided, will not comment when closing a pull requests.
    close-pr-message: # optional
    # The number of days old an issue or a pull request can be before marking it stale. Set to -1 to never mark issues or pull requests as stale automatically.
    days-before-stale: # optional, default is 60
    # The number of days old an issue can be before marking it stale. Set to -1 to never mark issues as stale automatically. Override "days-before-stale" option regarding only the issues.
    days-before-issue-stale: # optional
    # The number of days old a pull request can be before marking it stale. Set to -1 to never mark pull requests as stale automatically. Override "days-before-stale" option regarding only the pull requests.
    days-before-pr-stale: # optional
    # The number of days to wait to close an issue or a pull request after it being marked stale. Set to -1 to never close stale issues or pull requests.
    days-before-close: # optional, default is 7
    # The number of days to wait to close an issue after it being marked stale. Set to -1 to never close stale issues. Override "days-before-close" option regarding only the issues.
    days-before-issue-close: # optional
    # The number of days to wait to close a pull request after it being marked stale. Set to -1 to never close stale pull requests. Override "days-before-close" option regarding only the pull requests.
    days-before-pr-close: # optional
    # The label to apply when an issue is stale.
    stale-issue-label: # optional, default is Stale
    # The label to apply when an issue is closed.
    close-issue-label: # optional
    # The labels that mean an issue is exempt from being marked stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-issue-labels: # optional, default is 
    # The label to apply when a pull request is stale.
    stale-pr-label: # optional, default is Stale
    # The label to apply when a pull request is closed.
    close-pr-label: # optional
    # The labels that mean a pull request is exempt from being marked as stale. Separate multiple labels with commas (eg. "label1,label2").
    exempt-pr-labels: # optional, default is 
    # The milestones that mean an issue or a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2").
    exempt-milestones: # optional, default is 
    # The milestones that mean an issue is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the issues.
    exempt-issue-milestones: # optional, default is 
    # The milestones that mean a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the pull requests.
    exempt-pr-milestones: # optional, default is 
    # Exempt all issues and pull requests with milestones from being marked as stale. Default to false.
    exempt-all-milestones: # optional, default is false
    # Exempt all issues with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the issues.
    exempt-all-issue-milestones: # optional, default is 
    # Exempt all pull requests with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the pull requests.
    exempt-all-pr-milestones: # optional, default is 
    # Only issues or pull requests with all of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    only-labels: # optional, default is 
    # Only issues or pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
    any-of-labels: # optional, default is 
    # Only issues with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the issues.
    any-of-issue-labels: # optional, default is 
    # Only pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the pull requests.
    any-of-pr-labels: # optional, default is 
    # Only issues with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the issues.
    only-issue-labels: # optional, default is 
    # Only pull requests with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the pull requests.
    only-pr-labels: # optional, default is 
    # The maximum number of operations per run, used to control rate limiting (GitHub API CRUD related).
    operations-per-run: # optional, default is 30
    # Remove stale labels from issues and pull requests when they are updated or commented on.
    remove-stale-when-updated: # optional, default is true
    # Remove stale labels from issues when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the issues.
    remove-issue-stale-when-updated: # optional, default is true
    # Remove stale labels from pull requests when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the pull requests.
    remove-pr-stale-when-updated: # optional, default is true
    # Run the processor in debug mode without actually performing any operations on live issues.
    debug-only: # optional, default is false
    # The order to get issues or pull requests. Defaults to false, which is descending.
    ascending: # optional, default is false
    # Skip adding stale message when marking a pull request as stale.
    skip-stale-pr-message: # optional, default is false
    # Skip adding stale message when marking an issue as stale.
    skip-stale-issue-message: # optional, default is false
    # Delete the git branch after closing a stale pull request.
    delete-branch: # optional, default is false
    # The date used to skip the stale action on issue/pull request created before it (ISO 8601 or RFC 2822).
    start-date: # optional, default is 
    # The assignees which exempt an issue or a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2").
    exempt-assignees: # optional, default is 
    # The assignees which exempt an issue from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the issues.
    exempt-issue-assignees: # optional, default is 
    # The assignees which exempt a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the pull requests.
    exempt-pr-assignees: # optional, default is 
    # Exempt all issues and pull requests with assignees from being marked as stale. Default to false.
    exempt-all-assignees: # optional, default is false
    # Exempt all issues with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the issues.
    exempt-all-issue-assignees: # optional, default is 
    # Exempt all pull requests with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the pull requests.
    exempt-all-pr-assignees: # optional, default is 
    # Display some statistics at the end regarding the stale workflow (only when the logs are enabled).
    enable-statistics: # optional, default is true
    - name: Setup Java JDK
  uses: actions/setup-java@v2.1.0
  with:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
    java-version: 
    # Java distribution. See the list of supported distributions in README file
    distribution: 
    # The package type (jdk, jre, jdk+fx, jre+fx)
    java-package: # optional, default is jdk
    # The architecture of the package
    architecture: # optional, default is x64
    # Path to where the compressed JDK is located
    jdkFile: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec
    check-latest: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional, default is github
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional, default is GITHUB_ACTOR
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional, default is GITHUB_TOKEN
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    # Overwrite the settings.xml file if it exists. Default is "true".
    overwrite-settings: # optional, default is true
    # GPG private key to import. Default is empty string.
    gpg-private-key: # optional
    # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
    gpg-passphrase: # optional
    
- name: Coveralls GitHub Action
  # You may pin to the exact commit or the version.
  # uses: coverallsapp/github-action@8cbef1dea373ebce56de0a14c68d6267baa10b44
  uses: coverallsapp/github-action@v1.1.2
  with:
    # 
    github-token: 
    # Path to lcov file
    path-to-lcov: # default is ./coverage/lcov.info
    # Job flag name, e.g. "Unit", "Functional", or "Integration". Will be shown in the Coveralls UI.
    flag-name: # optional
    # Set to true if you are running parallel jobs, then use "parallel_finished: true" for the last action.
    parallel: # optional
    # Set to true for the last action when using "parallel: true".
    parallel-finished: # optional
    # Coveralls Enterprise server (more info: https://enterprise.coveralls.io)
    coveralls-endpoint: # optional, default is https://coveralls.io
    # The root folder of the project that originally ran the tests
    base-path: # optional
    - name: ansible-lint
  # You may pin to the exact commit or the version.
  # uses: ansible/ansible-lint-action@38e9ebdc9c3c71e66e2a3e0a09f0b6c8bc005e46
  uses: ansible/ansible-lint-action@v4.1.0.post0
  - name: Velocity deploy action
  # You may pin to the exact commit or the version.
  # uses: codeclimate/velocity-deploy-action@1b4a22f0db113bf8d85c14fd726cf0ec6d17cd13
  uses: codeclimate/velocity-deploy-action@v1.0.0
  with:
    # Your Velocity deployment token
    token: 
    # The version tag for the deploy (i.e. `b123`)
    version: # optional
    # The environment of the deploy (i.e. `production`)
    environment: # optional
    - name: Code Inspector GitHub action
  # You may pin to the exact commit or the version.
  # uses: codeinspectorio/github-action@01c818be303e2c4bcec991ca1c51feab753a1e2a
  uses: codeinspectorio/github-action@v1
  with:
    # Token to checkout the repository.
    repo_token: 
    # Access key on Code Inspector
    code_inspector_access_key: 
    # Secret key on Code Inspector
    code_inspector_secret_key: 
    # Minimum grade. Valid options are EXCELLENT, GOOD, NEUTRAL, WARNING, CRITICAL. Leave blank to ignore.
    min_quality_grade: # default is 
    # Minimum quality score from 0 (worst) to 100 (best)
    min_quality_score: # default is 0
    # Maximum defect rate per line of code (e.g. 0.01 for 1 defect per 100 lines of code). Leave 0 to ignore.
    max_defects_rate: # default is 0
    # Maximum number of complex functions rate (e.g. number of complex functions / number of functions). Leave 0 to ignore.
    max_complex_functions_rate: # default is 0
    # Maximum number of long functions rate (e.g. number of long functions / number of functions). Leave 0 to ignore.
    max_long_functions_rate: # default is 0
    # Project on code inspector. Will use the preferences of this analysis. Leave blank and no preferences are used
    project_name: # default is 
    # Timeout before giving up (in case analysis takes too long). Default is 10 minutes
    max_timeout_sec: # default is 600
    - name: HashiCorp's Link Checker
  # You may pin to the exact commit or the version.
  # uses: hashicorp/gh-action-check-broken-links@9da9ec2d83f88fe981a856c3f03aca64e68af90c
  uses: hashicorp/gh-action-check-broken-links@v1
  with:
    # The base URL that links will be resolved against
    baseUrl: 
    # A list of files that will be scanned for the presence of links
    files: # optional
    # A newline delmited list of URLs that will be ignored
    whitelist: # optional
    - name: Ponicode DogString: Automatic AI-based Docstring generation
  # You may pin to the exact commit or the version.
  # uses: ponicode/dogstring-action@0d2a9acd2cff787c524e3573ddb2131657b41cd3
  uses: ponicode/dogstring-action@v0.1.2-beta
  with:
    # Path of repo to generate docstrings for
    repo_path: # default is ./
    # Boolean: choose using the action on all the repository or just on the last commit
    all_repo: 
    - name: Fortify on Demand Scan
  # You may pin to the exact commit or the version.
  # uses: fortify/gha-setup-fod-uploader@636f3c3a14aec1747eec5242a02c6349e4f3cce6
  uses: fortify/gha-setup-fod-uploader@v1.0.1
  with:
    # FoDUploader version to use
    version: # default is latest
    - name: action-git-diff-suggestions
  # You may pin to the exact commit or the version.
  # uses: getsentry/action-git-diff-suggestions@8c75946d0d7bbe80a92cf3579d544321512c30b7
  uses: getsentry/action-git-diff-suggestions@v1
  with:
    # github token
    github-token: # optional
    # The message to prepend the review suggestion
    message: # optional
    - name: Ponicode Unit Test
  # You may pin to the exact commit or the version.
  # uses: ponicode/unit-testing-action@ab61a5a8e527affa366dda30d40fb205147b2513
  uses: ponicode/unit-testing-action@0.0.1-christmas
  with:
    # Path of repo to generate unit tests for
    repoPath: # default is ./
    # Ponicode token to use Ponicode API
    authToken: # default is 
    # Boolean. Enter true to generate test for changes since last repo or enter false if you want to generate for the whole repo
    changedFilesOnly: # optional, default is false
    # String. Enter the path to your coverage-final.json (Example: coverage/coverage-final.json)
    coverageJsonPath: # optional
    - name: Xanitizer Security Analysis
  # You may pin to the exact commit or the version.
  # uses: RIGS-IT/xanitizer-action@87d13138fb113b727cbe040c744a15a2b4fe5316
  uses: RIGS-IT/xanitizer-action@v1.0.1
  with:
    # String which is used as input for a Xanitizer license file. Note: It is recommended to use a GitHub secret to store the license file content like XANITIZER_LICENSE and access the content in the configuration via the GitHub secret parameter. Please see https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets for details. Note: If the license is a floating license and a proxy server is used to access the license server, please specify the proxy server settings. If no settings are specified, the settings from the Xanitizer properties file will be used.
    license: # optional
    # Number of attempts to get a license token from the license server. Note: If the used Xanitizer license is a machine bound license, this parameter will be ignored. If the used Xanitizer license is a floating license it may happen that all tokens are in use or the connection to the license server is not available at startup. In such cases, no license token can be requested successfully from the license server to start Xanitizer and the headless process would terminate with a license error. When this parameter is set to a value greater than zero, Xanitizer attempts every minute to request a license token until the specified count has been reached. Setting this parameter to zero disables the repetition.
    licenseServerRetryCount: # optional
    # Relative path under $GITHUB_WORKSPACE where the project was checked out. Note: Please use the same value as for parameter `path` of the configured actions/checkout action (see https://github.com/actions/checkout#usage parameter `path`).
    checkoutPath: # optional
    # The output location of the overview report. This has to be either a list of files or the parameter has to be undefined or empty if no overview reports should be written. Allowed file extensions are: pdf, html, docx.
    overviewReportOutputFile: # optional
    # Comma separated list of output locations of the overview reports. This has to be either a list of files or the parameter has to be undefined or empty if no overview reports should be written. Allowed file extensions are: pdf, html, docx.
    overviewReportOutputFiles: # optional
    # The output location of the findings list report. This has to be either a list of files or the parameter has to be undefined or empty if no findings list reports should be written. Allowed file extensions are: pdf, html, docx, xml, csv, sarif.
    findingsListReportOutputFile: # optional
    # Comma separated list of output locations of the findings list reports. This has to be either a list of files or the parameter has to be undefined or empty if no findings list reports should be written. Allowed file extensions are: pdf, html, docx, xml, csv, sarif. Note: If no report file has been secified, i.e., neither an overview report nor a findings list report, both a Xanitizer-Findings-List.pdf and a Xanitizer-Findings-List.sarif report will be generated in the checkout directory specified by $GITHUB_WORKSPACE with the optional relative parameter `checkoutPath` as default.
    findingsListReportOutputFiles: # optional
    # Boolean flag specifying if only findings with problem classifications are written to the findings list report.
    onlyProblemsInFindingsListReport: # optional, default is true
    # Boolean flag specifying if all the details of a finding are written to the findings list report, e.g. if the output contains all steps of a path. Note: Only relevant if the file extension of the parameter `findingsListReportOutputFile` is xml, html, or sarif.
    generateDetailsInFindingsListReport: # optional, default is true
    # The path to the Xanitizer configuration file of the project that should be analyzed. Either this parameter or the parameter `rootDirectory` may be specified, but not both. Note: If neither the parameter `configFile` nor the parameter `rootDirectory` has been specified, the parameter `rootDirectory` is set to the checkout directory specified by $GITHUB_WORKSPACE with the optional relative parameter `checkoutPath`.
    configFile: # optional
    # The root directory, to be used for default set-ups. Either this parameter or the parameter `configFile` may be specified, but not both. Note: If neither the parameter `configFile` nor the parameter `rootDirectory` has been specified, the parameter `rootDirectory` is set to the checkout directory specified by $GITHUB_WORKSPACE with the optional relative parameter `checkoutPath`.
    rootDirectory: # optional
    # The project name that should be used. Only relevant if the parameter `rootDirectory` is specified. If not given, the simple name of the root directory is used.
    projectName: # optional
    # The directory where to put the generated configuration file. Only relevant if the parameter `rootDirectory` is specified. If not given, the configuration file is generated in the `rootDirectory`.
    configFileDirectory: # optional
    # Boolean flag specifying if an existing config file is to be overwritten. Only relevant if the parameter `rootDirectory` is specified.
    overwriteConfigFile: # optional
    # Boolean flag specifying whether Xanitizer uses NodeJS to compile Angular and TypeScript projects to JavaScript code itself or not. This could be a potential risk if someone has manipulated the external ng or the tsc script. If the code is already compiled to JavaScript, best with a source map, this option can be set to `false` true - enables the compilation of Angular and TypeScript code to JavaScript by Xanitizer itself false - disables the compilation of Angular and TypeScript code to JavaScript by Xanitizer itself and some Xanitizer workspace information will be generated if Angular or Typescript files are found in the project not set - if this option is not set and Angular or Typescript files are found in the project, a Xanitizer workspace error will be generated 
    compileToJavaScript: # optional, default is true
    # Boolean flag specifying if npm audit should be executed. The npm audit APIs can be used to report on known vulnerable node.js libraries. This requires an Internet connection and so has to be allowed explicitly. This is only relevant for NodeJS projects.
    performNodeAudit: # optional, default is true
    # Boolean flag specifying whether the task should fail if there are search paths configured that do not exist.
    haltOnMissingSearchPaths: # optional
    # A comma - separated list of issue groups that will let the task fail if for any of them, a Xanitizer error issue occurs. Possible values are ALL_ERRORS, WORKSPACE_ERRORS, CALL_GRAPH_ERRORS, ANALYSIS_ERRORS, MIGRATION_ERRORS. If the value is not set, this means that issues are not relevant for the success of the task.
    haltOnIssues: # optional
    # Boolean flag specifying whether the task should fail if there are findings with a rating equal or higher than the value defined for `findingsRatingThreshold`.
    haltOnFindings: # optional
    # A rating value. Only used if the parameter `haltOnFindings` is set.
    findingsRatingThreshold: # optional
    # Boolean flag specifying whether the OWASP Dependency Check repository should be updated or not. Note: The OWASP Dependency Check is based on vulnerability data stored in a local repository. It is recommended to update the local OWASP Dependency Check repository on a regular basis via remote access to the National Vulnerability Database (NIST). If a proxy server is used to access the internet, please specify the proxy server settings otherwise the settings from the Xanitizer properties file will be used.
    updateOwaspDependencyCheckRepository: # optional
    # The logging level to be used when running Xanitizer. Values: OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL.
    logLevel: # optional
    # Xanitizer`s project data directory, if it is not the default one in <HOME>/.Xanitizer.
    projectDataDirectory: # optional
    # Boolean flag specifying whether the task should fail if there are * NEW * findings with a rating equal or higher than the value defined for `newFindingsRating`.
    haltOnNewFindings: # optional
    # A rating value. Only used if the parameter `haltOnNewFindings` is set.
    newFindingsRatingThreshold: # optional
    # Optional path to the local Maven repository. Note: If no settings are specified, the settings from the Xanitizer properties file will be used.
    mavenRepository: # optional
    # Boolean flag specifying whether a snapshot should be created after parsing and analyzing the current version or not.
    createSnapshot: # optional
    # Optional comment added to the newly created snapshot. Only relevant if the parameter `createSnapshot` is true.
    snapshotComment: # optional
    # The output directory of the project export. Note: If the parameter is undefined or an empty string, the project is not exported.
    exportDirectory: # optional
    # Boolean flag specifying if snapshots should be exported or not. The parameter is only used if an export directory is set. If the parameter is not set or empty, no snapshots are exported.
    exportSnapshots: # optional
    # The passphrase for the project export. The parameter is only used if an export directory is set. If the parameter is not set or empty, the exported project is not encrypted. Note: It is recommended to use a GitHub secret to store the export like XANITIZER_EXPORT_PASSPHRASE and access the content in the configuration via the GitHub secret parameter. Please see https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets for details.
    exportPassphrase: # optional
    # The path to an exported Xanitizer project archive file. If specified, this project is merged into the current project. This means that all more recent user adaptations, findings and issues are migrated into the current project.
    mergedProject: # optional
    # The passphrase for the merged project. The parameter is only necessary if the parameter `mergedProject` is set and the merged project is encrypted. Note: It is recommended to use a GitHub secret to store the export passphrase like XANITIZER_EXPORT_PASSPHRASE. and access the content in the configuration via the GitHub secret parameter. Please see https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets for details.
    importPassphrase: # optional
    # Optional proxy server to access the internet to update the OWASP Dependency Check repository or to request a license token from the public license server in case of a floating license via a proxy. Note: If no settings are specified, the settings from the Xanitizer properties file will be used.
    proxyServer: # optional
    # Optional proxy server port.
    proxyPort: # optional
    # Optional proxy server user name.
    proxyUser: # optional
    # Optional proxy server user password.
    proxyPassword: # optional
    - name: Alibaba Cloud Container Registry (ACR) Image Scan
  # You may pin to the exact commit or the version.
  # uses: aliyun/acr-scan@7b90a2ec1efddfce667c0a978de0e5ead596fda8
  uses: aliyun/acr-scan@v1
  with:
    # Access key id
    access-key-id: # optional, default is 
    # Access key secret
    access-key-secret: # optional, default is 
    # Region id
    region-id: # optional, default is cn-hangzhou
    # Registry instance id
    instance-id: # optional, default is 
    # Image repository name including namespace/name
    repository: # default is 
    # Image tag
    tag: # default is latest
    - name: Fortify ScanCentral Scan
  # You may pin to the exact commit or the version.
  # uses: fortify/gha-setup-scancentral-client@906d5cb5d8765c2e86e1ae7d32cd7b4bf45103f2
  uses: fortify/gha-setup-scancentral-client@v1.2.0
  with:
    # Fortify ScanCentral Client version to use
    version: # default is 20.2.0
    # ScanCentral client authentication token
    client-auth-token: # optional
    - name: SonarCloud Scan
  # You may pin to the exact commit or the version.
  # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
  uses: SonarSource/sonarcloud-github-action@v1.6
  with:
    # Additional arguments to the sonarcloud scanner
    args: # optional
    # Set the sonar.projectBaseDir analysis property
    projectBaseDir: # optional, default is .
    - name: Run Parasoft Jtest
  # You may pin to the exact commit or the version.
  # uses: parasoft/run-jtest-action@8883f9f725f0b161ceb49364714a3f8d15502587
  uses: parasoft/run-jtest-action@0.0.2
  with:
    # Installation folder of Parasoft Jtest. If not specified, the cpptestcli executable must be added to PATH.
    installDir: # optional
    # Working directory for running Jtest.
    workingDir: # optional, default is ${{ github.workspace }}
    # Test configuration to be used for code analysis.
    testConfig: # optional, default is builtin://Recommended Rules
    # Output folder for reports from code analysis.
    reportDir: # optional, default is reports
    # Format of reports from code analysis.
    reportFormat: # optional, default is xml,html,sarif
    # Input scope for analysis.
    input: # optional, default is jtest.data.json
    # Additional parameters for the jtestcli executable.
    additionalParams: # optional, default is 
    - name: Codacy Coverage Reporter
  # You may pin to the exact commit or the version.
  # uses: codacy/codacy-coverage-reporter-action@3f58b0e12285221110375dffef1150534700246b
  uses: codacy/codacy-coverage-reporter-action@1.0.0
  with:
    # API project token to retrieve your remote Codacy configuration for the project being analyzed
    project-token: # optional
    # API account token to retrieve your remote Codacy configuration for the project being analyzed
    api-token: # optional
    # Optional comma separated list of coverage reports to send to Codacy
    coverage-reports: # optional, default is 
    - name: Run Parasoft dotTEST
  # You may pin to the exact commit or the version.
  # uses: parasoft/run-dottest-action@6c31d80d83fbf312d0c819cc16a2ded05e0be861
  uses: parasoft/run-dottest-action@1.2.2
  with:
    # Path to the working directory.
    workingDir: # optional, default is ${{ github.workspace }}
    # Path to the dotTEST installation directory, which contains dottestcli.exe. If not specified, dottestcli.exe will be searched for on PATH.
    installDir: # optional
    # Path to the solution to be analyzed. Specify a semicolon-separated list of paths to analyze many solutions. Supports ANT-style wildcards.
    solution: # optional, default is .\*.sln
    # Path to the project to be analyzed when no solution is provided. Specify a semicolon-separated list of paths to analyze many projects. Supports ANT-style wildcards.
    project: # optional
    # Full path to the website directory to be analyzed when no solution is provided.
    website: # optional
    # URL of the test configuration to be used for analysis.
    testConfig: # optional, default is builtin://Recommended .NET Core Rules
    # Solution-relative path to a project in a solution, a directory of files in a project, or a file.
    resource: # optional
    # File system paths to files to include in analysis. Supports ANT-style wildcards. If not specified, all files are analyzed.
    include: # optional
    # File system paths to files to exclude from analysis. Supports ANT-style wildcards.
    exclude: # optional
    # Path to additional assemblies required to resolve dependencies. Specify a semicolon-separated list of paths to provide many references. Supports ANT-style wildcards.
    reference: # optional
    # Path to the directory where the report will be created.
    reportDir: # optional, default is ${{ github.workspace }}/.dottest/report/${{ github.run_number }}
    # Publishes report to DTP.
    publish: # optional
    # Path to a settings file.
    settings: # optional
    # A single configuration setting in the "key=value" format.
    property: # optional
    # Disables the build of the tested solutions or projects.
    nobuild: # optional
    # Runs tests that are tagged with specific issue tracking types/IDs.
    testTagFilter: # optional
    # Solution configuration, e.g. "Debug".
    solutionConfig: # optional
    # Project configuration, e.g. "Debug".
    projectConfig: # optional
    # Target platform of the solution configuration (e.g."Any CPU") or project configuration (e.g. "AnyCPU").
    targetPlatform: # optional
    # Path to the location where console output is saved.
    out: # optional
    # Fails the command with exit code 2 or 4 if any findings are reported. It is recommended to use it with continue-on-error: true.
    fail: # optional
    # Lists all settings that are currently used.
    showsettings: # optional
    # 'Mode for GitHub report (SARIF) generation. You can use:
    # - "legacy" - for dotTEST 2020.2 or older
    # - "builtin" - for dotTEST 2021.1 or newer (default)
    sarifMode: # optional, default is builtin
    - name: Run Parasoft C/C++test
  # You may pin to the exact commit or the version.
  # uses: parasoft/run-cpptest-action@aeb0150eeb0f96098ad3bac53609fd462f88c4f6
  uses: parasoft/run-cpptest-action@1.0.1
  with:
    # Installation folder of Parasoft C/C++test. If not specified, the cpptestcli executable must be added to $PATH.
    installDir: # optional
    # Working directory for running C/C++test.
    workingDir: # optional, default is ${{ github.workspace }}
    # Identifier of a compiler configuration. Ensure you specify the configuration that matches your compiler.
    compilerConfig: # optional, default is gcc_9-64
    # Test configuration to be used for code analysis.
    testConfig: # optional, default is builtin://Recommended Rules
    # Output folder for reports from code analysis.
    reportDir: # optional, default is reports
    # Format of reports from code analysis.
    reportFormat: # optional, default is xml,html,sarif
    # Input scope for analysis (typically, cpptestscan.bdf or compile_commands.json, depending on the project type and the build system).
    input: # optional, default is cpptestscan.bdf
    # Additional parameters for the cpptestcli executable.
    additionalParams: # optional, default is 
    # Command line pattern for running C/C++test.
    commandLinePattern: # optional, default is ${cpptestcli} -compiler "${compilerConfig}" -config "${testConfig}" -property report.format=${reportFormat} -report "${reportDir}" -module . -input "${input}" ${additionalParams}
    - name: Codacy Analysis CLI
  # You may pin to the exact commit or the version.
  # uses: codacy/codacy-analysis-cli-action@b3451bc69d89f9f71fd0e2fbb9597e4ea9b631b1
  uses: codacy/codacy-analysis-cli-action@3.0.3
  with:
    # Run with verbose output
    verbose: # optional
    # API project token to retrieve your remote Codacy configuration for the project being analyzed
    project-token: # optional
    # API account token to retrieve your remote Codacy configuration for the project being analyzed
    api-token: # optional
    # Codacy's API URL, to retrieve your remote Codacy configuration
    codacy-api-base-url: # optional
    # Format of the output file
    format: # optional
    # Send analysis results to an output file
    output: # optional
    # The directory to be analyzed
    directory: # optional
    # Number of tools to run in parallel
    parallel: # optional
    # Maximum number of issues allowed for the analysis to succeed
    max-allowed-issues: # optional, default is 2147483647
    # The name of the tool to analyze the code
    tool: # optional
    # Maximum time each tool has to execute
    tool-timeout: # optional
    # Upload analysis results to Codacy
    upload: # optional
    # Fail the analysis if any tool fails to run
    fail-if-incomplete: # optional
    # Allow network access for tools
    allow-network: # optional
    # Force files to be readable by changing the permissions before running the analysis
    force-file-permissions: # optional
    # Reduce issue severity by one level, for non-security issues, for compatibility with GitHub's code scanning feature. This option will only have an effect when used in conjunction with '--format sarif'.
    gh-code-scanning-compat: # optional
    # Run dockerized tools. Possible values (true|false) Check the full list in https://docs.codacy.com/repositories-configure/codacy-configuration-file/#which-tools-can-be-configured-and-which-name-should-i-use
    run-docker-tools: # optional, default is true
    # Run GoSec. Possible values (true|false)
    run-gosec: # optional
    # Run StaticCheck. Possible values (true|false)
    run-staticcheck: # optional
    # Path to a file containing the output of Clang Tidy.
    clang-tidy-output: # optional
    # Path to a file containing the output of Faux Pas.
    faux-pas-output: # optional
    - name: Checkov GitHub Action
  # You may pin to the exact commit or the version.
  # uses: bridgecrewio/checkov-action@00cc657f4d415593e5c8897bc87f490497ccb5f9
  uses: bridgecrewio/checkov-action@v12.641.0
  with:
    # directory with infrastructure code to scan
    directory: # optional, default is .
    # Run scan only on a specific check identifier (comma separated)
    check: # optional
    # Run scan on all checks but a specific check identifier (comma separated)
    skip_check: # optional
    # display only failed checks
    quiet: # optional
    # do not return an error code if there are failed checks
    soft_fail: # optional
    # run only on a specific infrastructure
    framework: # optional
    # comma separated list of external (custom) checks directories
    external_checks_dirs: # optional
    # comma separated list of external (custom) checks repositories
    external_checks_repos: # optional
    # The format of the output. cli, json, junitxml, github_failed_only
    output_format: # optional
    # download external terraform modules from public git repositories and terraform registry:true, false
    download_external_modules: # optional
    # log level
    log_level: # optional, default is WARNING
    - name: Official SonarQube Scan
  # You may pin to the exact commit or the version.
  # uses: SonarSource/sonarqube-scan-action@069e3332cbefb8659c02d77b21a04719d3ef7c9b
  uses: SonarSource/sonarqube-scan-action@v1.0.0
  with:
    # Additional arguments to the sonar-scanner
    args: # optional
    # Set the sonar.projectBaseDir analysis property
    projectBaseDir: # optional, default is .
    - name: SonarQube Quality Gate Check
  # You may pin to the exact commit or the version.
  # uses: SonarSource/sonarqube-quality-gate-action@15767f0e4eb489cfdd989dc717fa78c038d0de8a
  uses: SonarSource/sonarqube-quality-gate-action@v1.0.0
  with:
    # Location of the scanner metadata report file
    scanMetadataReportFile: # optional, default is .scannerwork/report-task.txt
    - name: Psalm – Static Analysis for PHP
  # You may pin to the exact commit or the version.
  # uses: psalm/psalm-github-actions@2e545d38ff4387b370449e2673088cc8dc40cf1d
  uses: psalm/psalm-github-actions@1.1.2
  with:
    # Whether or not to use Psalm’s security analysis
    security_analysis: # optional
    # File for Psalm’s output
    report_file: # optional, default is 
    # Whether or not Composer installs dev packages
    composer_require_dev: # optional
    # Whether or not the --ignore-platform-reqs flag is passed to Composer
    composer_ignore_platform_reqs: # optional
    - name: Codecov
  # You may pin to the exact commit or the version.
  # uses: codecov/codecov-action@fbeda37de967cc17491cd6587ec90ab98e3a3da0
  uses: codecov/codecov-action@v1.5.1
  with:
    # Repository upload token - get it from codecov.io. Required only for private repositories
    token: # optional
    # Comma-separated list of files to upload
    files: # optional
    # Directory to search for coverage reports.
    directory: # optional
    # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
    flags: # optional
    # Extra curl arguments to communicate with AWS.
    aws_curl_args: # optional
    # Extra curl arguments to communicate with Codecov. e.g., -U "--proxy http://http-proxy"
    codecov_curl_args: # optional
    # The commit SHA of the parent for which you are uploading coverage. If not present, the parent will be determined using the API of your repository provider.  When using the repository providers API, the parent is determined via finding the closest ancestor to the commit.
    commit_parent: # optional
    # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
    env_vars: # optional
    # Specify whether or not CI build should fail if Codecov runs into an error during upload
    fail_ci_if_error: # optional
    # Path to coverage file to upload
    file: # optional
    # Comma-separated list, see the README for options and their usage
    functionalities: # optional
    # extra arguments to pass to gcov
    gcov_args: # optional
    # gcov executable to run. Defaults to gcov
    gcov_executable: # optional
    # Paths to ignore during gcov gathering (as a glob)
    gcov_path_exclude: # optional
    # Paths to include during gcov gathering (as a glob)
    gcov_path_include: # optional
    # Prefix filepaths to help resolve path fixing
    gcov_prefix: # optional
    # Project root directory, also used when preparing gcov
    gcov_root_dir: # optional
    # Move discovered coverage reports to the trash
    move_coverage_to_trash: # optional
    # User defined upload name. Visible in Codecov UI
    name: # optional
    # Used to restrict the set of git/hg files that can be matched with filenames in the coverage report. This is useful for monorepos or other setups where a full filepath may not be specified in the coverage report, and that shortened filepath may appear multiple times in a directory structure (e.g. __init__.py)
    network_filter: # optional
    # Specify the branch name
    override_branch: # optional
    # Specify the build number
    override_build: # optional
    # Specify the commit SHA
    override_commit: # optional
    # Specify the pull request number
    override_pr: # optional
    # Specify the git tag
    override_tag: # optional
    # Write upload file to path before uploading
    path_to_write_report: # optional
    # Used when not in git/hg project to identify project root directory
    root_dir: # optional
    # Specify whether the Codecov output should be verbose
    verbose: # optional
    # Directory in which to execute codecov.sh
    working-directory: # optional
    # Custom Derived Data Path for Coverage.profdata and gcov processing
    xcode_derived_data: # optional
    # Specify packages to build coverage. Uploader will only build these packages
    xcode_package: # optional
    - name: IntelliCode Team Completions
  uses: microsoft/vs-intellicode@v1.0
  with:
    # Only for C++ extractions. Sets the platform for the C++ build (ARM, Any CPU, etc).
    platform: # optional
    # Only for C++ extractions. Sets the configuration for the C++ build (Debug, Release).
    config: # optional
    # Use if you wish to override the directory where the repo to be trained is located at.
    directory: # optional
    # Use debug to override logs and display diagnostics verbosity
    logs: # optional
    - name: DevSkim
  uses: microsoft/DevSkim-Action@v1
  with:
    # The sub directory of the repository root to scan. Repository root used by default.
    directory-to-scan: # optional, default is GITHUB_WORKSPACE
    # Optionally scan the contents of archives.
    should-scan-archives: # optional
    # The filename for the output.
    output-filename: # optional, default is devskim-results.sarif
    # The sub directory for the output under GITHUB_WORKSPACE.
    output-directory: # optional, default is GITHUB_WORKSPACE
    - name: InferSharp
  uses: microsoft/infersharpaction@v1.0
  with:
    # The path where the binaries (.dll and .pdb) are located.
    binary-path: 
    - name: REST API Fuzz Testing (RAFT) Action
  uses: microsoft/raft-action@v3.2
  with:
    # Setting the mode to azure will deploy against your azure RAFT deployment
    mode: # optional, default is local
    # RAFT CLI arguments
    arguments: 
    # Copy logs to this directory
    logDirectory: # optional, default is .raft
    # RAFT defaults.json contents
    raftDefaults: # optional
    # Service Principal secret for RAFT deployment
    secret: # optional
    - name: Container image scan
  uses: Azure/container-scan@v0
  with:
    # Docker image to scan
    image-name: 
    # Minimum severities of vulnerabilities to be displayed (UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL)
    severity-threshold: # optional, default is HIGH
    # Username to authenticate to the Docker registry
    username: # optional
    # Password to authenticate to the Docker registry
    password: # optional
    # Github token
    token: # default is ${{ github.token }}
    # Add additional checks to ensure the image is secure and follows best practices and CIS standards
    run-quality-checks: # optional, default is true
    - name: Run PSScriptAnalyzer
  uses: microsoft/psscriptanalyzer-action@v1.0
  with:
    # Specifies the path to the scripts or module to be analyzed. Wildcard characters are supported.
    path: # default is .\
    # Uses only the custom rules defined in the specified paths to the analysis. To still use the built-in rules, add the -IncludeDefaultRules switch.
    customRulePath: # optional
    # Adds rules defined in subdirectories of the CustomRulePath location.
    recurseCustomRulePath: # optional
    # Omits the specified rules from the Script Analyzer test. Wildcard characters are supported.
    excludeRule: # optional
    # Invoke default rules along with Custom rules.
    includeDefaultRules: # optional
    # Runs only the specified rules in the Script Analyzer test.
    includeRule: # optional
    # After running Script Analyzer with all rules, this parameter selects rule violations with the specified severity.
    severity: # optional
    # Runs Script Analyzer on the files in the Path directory and all subdirectories recursively.
    recurse: # optional
    # Returns rules that are suppressed, instead of analyzing the files in the path.
    suppressedOnly: # optional
    # Fixes certain warnings which contain a fix in their DiagnosticRecord.
    fix: # optional
    # Exits PowerShell and returns an exit code equal to the number of error records.
    enableExit: # optional
    # File path that contains user profile or hash table for ScriptAnalyzer.
    settings: # optional
    # Specifies where the path for the sarif file
    output: # default is results.sarif
    # Exclude specific files from the sarif results. Uses regex pattern.
    ignorePattern: # optional
    - name: Pocket_Lint
  # You may pin to the exact commit or the version.
  # uses: PatMyron/pocket-lint@08f2d6e91563008ce4600823b766bf5cb11a1301
  uses: PatMyron/pocket-lint@0.1
  - name: Codecov Action
  # You may pin to the exact commit or the version.
  # uses: Atrox/codecov-action@a6a776b04601038256e1904fb80c5fc8e5153f05
  uses: Atrox/codecov-action@v0.1.3
  - name: PHPCodeSniffer
  # You may pin to the exact commit or the version.
  # uses: rtCamp/action-phpcs-inspection@22db6a060f87219d50bcf120d47e8c122a930906
  uses: rtCamp/action-phpcs-inspection@v1.0.0
  - name: Secret Scan
  # You may pin to the exact commit or the version.
  # uses: max/secret-scan@40818319d07ccc6588021ead3c0af76cec2e6496
  uses: max/secret-scan@1.0.0
  - name: GitHub Action for pytest
  # You may pin to the exact commit or the version.
  # uses: cclauss/GitHub-Action-for-pytest@5863d02de95f37516a732802fa6257dfdf93e54c
  uses: cclauss/GitHub-Action-for-pytest@0.5.0
  - name: GitHub Action for pylint
  # You may pin to the exact commit or the version.
  # uses: cclauss/GitHub-Action-for-pylint@8ef4d22e119fb1cdc0f58f2e95cb1f8d8b0d55e6
  uses: cclauss/GitHub-Action-for-pylint@0.7.0
  - name: Rubocop checks
  # You may pin to the exact commit or the version.
  # uses: gimenete/rubocop-action@649c2b18b5726302b6b120dad74c25d2b2f391e9
  uses: gimenete/rubocop-action@1.0
  - name: Haskell Linter
  # You may pin to the exact commit or the version.
  # uses: domdere/haskell-lint-action@f865aa0bfb6db9632e0f905dee4b0716a76a5494
  uses: domdere/haskell-lint-action@v1.0.2
  - name: Go-Linty
  # You may pin to the exact commit or the version.
  # uses: ArangoGutierrez/GoLinty-Action@3f9802b64a9abdae2a98e6541ccd4d3271ef44d7
  uses: ArangoGutierrez/GoLinty-Action@go-1.13rc1-alpine
  - name: Python Syntax Checker
  # You may pin to the exact commit or the version.
  # uses: cclauss/Find-Python-syntax-errors-action@90f67be9fb626b675a3971b1d08ab29851cb721f
  uses: cclauss/Find-Python-syntax-errors-action@v0.2.0
  - name: Upgrade to Python 3
  # You may pin to the exact commit or the version.
  # uses: cclauss/Upgrade-to-Python3@3c75b55b2d6965770da865993f85010ed4e1500a
  uses: cclauss/Upgrade-to-Python3@0.1.0
  - name: validate-license-action
  # You may pin to the exact commit or the version.
  # uses: datreeio/validate-license-action@69e5b55debf4046461b0d21cced2f444937f863f
  uses: datreeio/validate-license-action@v1.0.0
  - name: Pyflakes Syntax Checker
  # You may pin to the exact commit or the version.
  # uses: lgeiger/pyflakes-action@b3972d29b811eabc23aa239eaaea9e1da5001f8d
  uses: lgeiger/pyflakes-action@v1.0.1
  - name: Black Code Formatter
  # You may pin to the exact commit or the version.
  # uses: lgeiger/black-action@4379f39aa4b6a3bb1cceb46a7665b9c26647d82d
  uses: lgeiger/black-action@v1.0.1
  - name: GitHub Action for Flake8
  # You may pin to the exact commit or the version.
  # uses: cclauss/GitHub-Action-for-Flake8@04114a00bd15d0537eef73c8116716cdfccd3e8b
  uses: cclauss/GitHub-Action-for-Flake8@v0.5.0
  - name: Sentry.io release management
  # You may pin to the exact commit or the version.
  # uses: NSCoder/sentry-release@66f31d01221f0e54ff53b77e9426c3099f0ca636
  uses: NSCoder/sentry-release@v1.0.0
  - name: xo-action
  # You may pin to the exact commit or the version.
  # uses: stoe/xo-action@586affe650e42421eadf6f9603ab2f39d51fbc36
  uses: stoe/xo-action@v1.0.1
  - name: Analysis Publisher
  # You may pin to the exact commit or the version.
  # uses: digirati-labs/analysis-publisher@ae3f1637651adcbc09101f5bcfb2732dd5df4735
  uses: digirati-labs/analysis-publisher@0.0.1
  - name: OSKAR-phpcs
  # You may pin to the exact commit or the version.
  # uses: OskarStark/phpcs-ga@f51a526c819eccf595bc5807d903de3ae1082a68
  uses: OskarStark/phpcs-ga@3.4.2
  - name: EdgedesignCZ PHPQA tool suite
  # You may pin to the exact commit or the version.
  # uses: mickaelandrieu/phpqa-ga@716924ede89f59640f679dbb0f018ba642b9a9be
  uses: mickaelandrieu/phpqa-ga@v1.0
  - name: composer-normalize-action
  # You may pin to the exact commit or the version.
  # uses: ergebnis/composer-normalize-action@e22e2f15ffe7107cb524fc1d659cc43b3def669d
  uses: ergebnis/composer-normalize-action@0.8.0
  - name: Lighthouse Audit
  # You may pin to the exact commit or the version.
  # uses: jakejarvis/lighthouse-action@a3bcc9973b3ce65beff316b3cac53b92e58dcc12
  uses: jakejarvis/lighthouse-action@v0.3.2
  - name: Commitlint CLI
  # You may pin to the exact commit or the version.
  # uses: bennypowers/commitlint-gh-actions@e2376695382ef566db685cdf4dbcd144aafb6911
  uses: bennypowers/commitlint-gh-actions@v1.0.1
  - name: GitHub Action for Yarn + Cypress
  # You may pin to the exact commit or the version.
  # uses: KingScooty/actions-yarn-cy@be4194dc56b2bb467f5be44dd7ceffb959f96896
  uses: KingScooty/actions-yarn-cy@1.0.0
  - name: ESlint Runner Action
  # You may pin to the exact commit or the version.
  # uses: tinovyatkin/action-eslint@3d7db709c05548b9146ea96dcc7ee8a0d5b6ed75
  uses: tinovyatkin/action-eslint@v1
  with:
    # Token for the repo. Can be passed in using {{ secrets.GITHUB_TOKEN }}
    repo-token: 
    # This check name to post annotations
    check-name: # optional
    - name: Standard checks
  # You may pin to the exact commit or the version.
  # uses: cored/standard-action@b5062a22954284a2dd44181c1ff988cb3768b31c
  uses: cored/standard-action@0.0.1
  - name: Conftest
  # You may pin to the exact commit or the version.
  # uses: instrumenta/conftest-action@2b17b6e48009573bfee75b6f2b51bb1dacb05a2a
  uses: instrumenta/conftest-action@v0.4.0
  with:
    # Files for Conftest to test
    files: 
    # Where to find the policy folder or file
    policy: # optional, default is policy
    # The Rego namespace to use for testing
    namespace: # optional, default is main
    # Output format for results
    output: # optional, default is stdout
    - name: GitHub Action for JS Bundle Size
  # You may pin to the exact commit or the version.
  # uses: mikeal/bundle-size-action@a2055271c672d7aa232c6c02957df515cf5c2cc5
  uses: mikeal/bundle-size-action@1.0.0
  - name: Lighthouse Audit
  # You may pin to the exact commit or the version.
  # uses: jakejarvis/lighthouse-action@a3bcc9973b3ce65beff316b3cac53b92e58dcc12
  uses: jakejarvis/lighthouse-action@v0.3.2
  - name: ESlint Runner Action
  # You may pin to the exact commit or the version.
  # uses: tinovyatkin/action-eslint@3d7db709c05548b9146ea96dcc7ee8a0d5b6ed75
  uses: tinovyatkin/action-eslint@v1
  with:
    # Token for the repo. Can be passed in using {{ secrets.GITHUB_TOKEN }}
    repo-token: 
    # This check name to post annotations
    check-name: # optional
    - name: Run flake8 on your PR - with annotations!
  # You may pin to the exact commit or the version.
  # uses: tayfun/flake8-your-pr@50a175cde4dd26a656734c5b64ba1e5bb27151cb
  uses: tayfun/flake8-your-pr@1.0.1
  - name: EditorConfig-Action
  # You may pin to the exact commit or the version.
  # uses: zbeekman/EditorConfig-Action@ad87de68f3718e100afb65800195b08ea44b7d9e
  uses: zbeekman/EditorConfig-Action@v1.1.1
  - name: clang-tidy check
  # You may pin to the exact commit or the version.
  # uses: muxee/clang-tidy-action@7b55a601bc127aeca89a8d1a67a74159e828fbd6
  uses: muxee/clang-tidy-action@0.0.1-rc1
  - name: Rust MUSL Builder
  # You may pin to the exact commit or the version.
  # uses: NSCoder/rust-musl-action@a8aaded66531bd7ba0d25808840701659fc10763
  uses: NSCoder/rust-musl-action@v1.0.0
  - name: xUnit Slack Reporter
  # You may pin to the exact commit or the version.
  # uses: ivanklee86/xunit-slack-reporter@067344ab190a0e84958928df18039b2a53c2fceb
  uses: ivanklee86/xunit-slack-reporter@v1.0.1
  - name: phpinsights
  # You may pin to the exact commit or the version.
  # uses: tienvx/phpinsights-action@d5f569f6ea63c510484593ae30c3061f14d141ea
  uses: tienvx/phpinsights-action@v1.0.0
  - name: PhpUnit for Laravel
  # You may pin to the exact commit or the version.
  # uses: svikramjeet/git-action-laravel-phpunit@4bad6262594f6a8b7c7b7be49f2e5191fc3f50f1
  uses: svikramjeet/git-action-laravel-phpunit@v1.0
  - name: Run shellcheck with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-shellcheck@d1633401834d548d262edaf8cd57ca4910bc9282
  uses: reviewdog/action-shellcheck@v1.0.0
  with:
    # GITHUB_TOKEN.
    github_token: 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.
github-pr-review can use Markdown and add a link to rule page in reviewdog reports.

    reporter: # optional, default is github-pr-check
    # Base directory to run shellcheck. Same as `[path]` of `find` command.
    path: # optional, default is .
    # File patterns of target files. Same as `-name [pattern]` of `find` command.
    pattern: # optional, default is *.sh
    # Exclude patterns of target files. Same as `-not -path [exclude]` of `find` command.
    exclude: # optional
    - name: Run tflint with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-tflint@5a3b8f54f9bbd6ea3e2f7df28349d4a86694ab10
  uses: reviewdog/action-tflint@v1.1.1
  with:
    # GITHUB_TOKEN
    github_token: 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.

    reporter: # optional, default is github-pr-check
    # List of arguments to send to tflint
For the output to be parsable by reviewdog --format=checkstyle is enforced
Default is --module.

    flags: # optional, default is --module
    - name: xUnit Slack Reporter
  # You may pin to the exact commit or the version.
  # uses: ivanklee86/xunit-slack-reporter@067344ab190a0e84958928df18039b2a53c2fceb
  uses: ivanklee86/xunit-slack-reporter@v1.0.1
  - name: phpinsights
  # You may pin to the exact commit or the version.
  # uses: tienvx/phpinsights-action@d5f569f6ea63c510484593ae30c3061f14d141ea
  uses: tienvx/phpinsights-action@v1.0.0
  - name: PhpUnit for Laravel
  # You may pin to the exact commit or the version.
  # uses: svikramjeet/git-action-laravel-phpunit@4bad6262594f6a8b7c7b7be49f2e5191fc3f50f1
  uses: svikramjeet/git-action-laravel-phpunit@v1.0
  - name: Run shellcheck with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-shellcheck@d1633401834d548d262edaf8cd57ca4910bc9282
  uses: reviewdog/action-shellcheck@v1.0.0
  with:
    # GITHUB_TOKEN.
    github_token: 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.
github-pr-review can use Markdown and add a link to rule page in reviewdog reports.

    reporter: # optional, default is github-pr-check
    # Base directory to run shellcheck. Same as `[path]` of `find` command.
    path: # optional, default is .
    # File patterns of target files. Same as `-name [pattern]` of `find` command.
    pattern: # optional, default is *.sh
    # Exclude patterns of target files. Same as `-not -path [exclude]` of `find` command.
    exclude: # optional
    - name: Run tflint with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-tflint@5a3b8f54f9bbd6ea3e2f7df28349d4a86694ab10
  uses: reviewdog/action-tflint@v1.1.1
  with:
    # GITHUB_TOKEN
    github_token: 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.

    reporter: # optional, default is github-pr-check
    # List of arguments to send to tflint
For the output to be parsable by reviewdog --format=checkstyle is enforced
Default is --module.

    flags: # optional, default is --module
    - name: Node Code Formatter
  # You may pin to the exact commit or the version.
  # uses: MarvinJWendt/run-node-formatter@4158ea1a9dadae41161f8e051f0312fd4305d72b
  uses: MarvinJWendt/run-node-formatter@1.5.2
  - name: sqflint
  # You may pin to the exact commit or the version.
  # uses: arma-actions/sqflint@bc970657e0ffc0f6280f8d3a578fdd11fa20e076
  uses: arma-actions/sqflint@v1.0
  - name: Run golangci-lint with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-golangci-lint@0c0b38a124a374fd54941d44d2c602f945feedd7
  uses: reviewdog/action-golangci-lint@v1.1.3
  with:
    # GITHUB_TOKEN.
    github_token: 
    # golangci-lint flags. (golangci-lint run --out-format=line-number <golangci_lint_flags>)
    golangci_lint_flags: # optional, default is 
    # Tool name to use for reviewdog reporter
    tool_name: # optional, default is golangci
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review,github-check].
    reporter: # optional, default is github-pr-check
    - name: Run misspell with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-misspell@5e6f911980d581772c9111f90f319b33ac487679
  uses: reviewdog/action-misspell@v1.2.0
  with:
    # GITHUB_TOKEN.
    github_token: # optional, default is ${{ github.token }}
    # -locale flag of misspell. (US/UK)
    locale: # optional, default is 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
    reporter: # optional, default is github-pr-check
    # Comma-separated words to ignore
    ignore: # optional, default is 
    # Base directory to run misspell. Same as `[path]` of `find` command.
    path: # optional, default is .
    # File patterns of target files. Same as `-name [pattern]` of `find` command.
    pattern: # optional, default is *
    # Exclude patterns of target files. Same as `-not -path [exclude]` of `find` command.
    exclude: # optional, default is 
    - name: bom-check
  # You may pin to the exact commit or the version.
  # uses: arma-actions/bom-check@068e0ff48e2f45abb89a35836ce085f32f20c97f
  uses: arma-actions/bom-check@v1.1
  with:
    # Path to check
    path: # optional, default is .
    - name: Sphinx Build
  # You may pin to the exact commit or the version.
  # uses: ammaraskar/sphinx-action@8b4f60114d7fd1faeba1a712269168508d4750d2
  uses: ammaraskar/sphinx-action@0.4
  with:
    # The folder containing your sphinx docs.
    docs-folder: # default is docs/
    # The command used to build your documentation.
    build-command: # optional, default is make html
    # Run before the build command, you can use this to install system level dependencies, for example with "apt-get update -y && apt-get install -y perl"
    pre-build-command: # optional
    - name: Scalafmt Action
  # You may pin to the exact commit or the version.
  # uses: openlawteam/scalafmt-ci@2688abc88101f179a5a540a59db9da98908e8115
  uses: openlawteam/scalafmt-ci@v2.0.2
  with:
    # Args to pass to scalafmt
    args: # optional, default is --list
    - name: Run stylelint with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-stylelint@19fedb716ce623bfb40631643603f1458298ee8d
  uses: reviewdog/action-stylelint@v1.0.1
  with:
    # GITHUB_TOKEN.
    github_token: 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.
github-pr-review can use Markdown and add a link to rule page in reviewdog reports.

    reporter: # optional, default is github-pr-check
    # Files or glob. Default: `**/*.css`.  It's same as `[input]` of stylelint.
    stylelint_input: # optional, default is **/*.css
    # It's same as `--config` flag of stylelint.
    stylelint_config: # optional
    - name: Run vint with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-vint@ec99055b5803cb8bf0ecda8fb3064c4ecf3db9af
  uses: reviewdog/action-vint@v1.0.1
  with:
    # GITHUB_TOKEN.
    github_token: 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.
github-pr-review can use Markdown and add a link to rule page in reviewdog reports.

    reporter: # optional, default is github-pr-check
    - name: Run eslint with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-eslint@c93d1f8efe07ce3b9b2d186ceaa5cd6ced717633
  uses: reviewdog/action-eslint@v1.0.0
  with:
    # GITHUB_TOKEN.
    github_token: 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.
github-pr-review can use Markdown and add a link to rule page in reviewdog reports.

    reporter: # optional, default is github-pr-check
    # flags and args of eslint command. Default: '.'
    eslint_flags: # optional, default is .
    - name: rust-grcov
  # You may pin to the exact commit or the version.
  # uses: actions-rs/grcov@bb47b1ed7883a1502fa6875d562727ace2511248
  uses: actions-rs/grcov@v0.1.5
  with:
    # Path to the configuration file (optional, relative to the repository root)
    config: # optional, default is .github/actions-rs/grcov.yml
    - name: Codecov Node
  # You may pin to the exact commit or the version.
  # uses: iansu/codecov-action-node@a3174bedb5cd1a1439216391fe8a56ce97407172
  uses: iansu/codecov-action-node@v1.0.1
  with:
    # User defined upload name. Visible in Codecov UI
    name: # optional
    # Repository upload token - get it from codecov.io
    token: # optional
    # Path to coverage file to upload
    file: # optional
    # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
    flags: # optional
    - name: Readable Readme
  # You may pin to the exact commit or the version.
  # uses: tianhaoz95/readable-readme@c798fb380d5dcaebabf1648931d42ae67351400e
  uses: tianhaoz95/readable-readme@v1.0.4-beta
  with:
    # The token of the GitHub identity that report should be posted from.
    token: # optional
    - name: Golang Pieline
  # You may pin to the exact commit or the version.
  # uses: shoukoo/golang-pipeline@e056a6791721d91d11f5247e881bc1c4c6f7f46c
  uses: shoukoo/golang-pipeline@0.2.0
  - name: Yan Create Tag
  # You may pin to the exact commit or the version.
  # uses: Yanjingzhu/FirstJSAction@7d47112ecdffcf3b23df8d383ba21316e8c68418
  uses: Yanjingzhu/FirstJSAction@v1.3
  with:
    # Generated tag
    tag: 
    # tag message
    message: 
    # commit sha
    commit: 
    # 
    token: # default is ${{ github.token }}
    - name: StandardRB Action
  # You may pin to the exact commit or the version.
  # uses: andrewmcodes/standardrb-action@01380c78744838ecef4f9b63a2732f889ef4d2d5
  uses: andrewmcodes/standardrb-action@v0.0.2
  - name: clj-kondo checks
  # You may pin to the exact commit or the version.
  # uses: DeLaGuardo/clojure-lint-action@18932a78c85cad1acef494181cc82d918492131a
  uses: DeLaGuardo/clojure-lint-action@v1
  with:
    # Arguments to be passed to clj-kondo
    clj-kondo-args: # default is --lint src
    # Github token to report linter results back to check
    github_token: 
    - name: HAML Lint Action
  # You may pin to the exact commit or the version.
  # uses: andrewmcodes/haml-lint-action@abd3628407a0119e06877fc2be14b5077f2546d2
  uses: andrewmcodes/haml-lint-action@v0.0.1
  - name: ECLint
  # You may pin to the exact commit or the version.
  # uses: snow-actions/eclint@73be49ca24c9def5248c40e4b2fd1976c9d58a3a
  uses: snow-actions/eclint@v1.0.1
  with:
    # arguments
    args: # default is check
    - name: Brakeman linter
  # You may pin to the exact commit or the version.
  # uses: devmasx/brakeman-linter-action@0dc80fcccf87915ccb1761669014015214f36287
  uses: devmasx/brakeman-linter-action@v1.0.0
  - name: markdownlint-cli
  # You may pin to the exact commit or the version.
  # uses: nosborn/github-action-markdown-cli@9fc95163471d6460c35cccad13645912aaa25d5f
  uses: nosborn/github-action-markdown-cli@v1.1.1
  with:
    # configuration file (JSON or YAML)
    config_file: # optional
    # files, directories, or globs
    files: 
    # files to ignore/exclude
    ignore_files: # optional
    # custom rule files
    rules: # optional
    - name: yamllint
  # You may pin to the exact commit or the version.
  # uses: nosborn/github-action-yamllint@df09083daa8b9a6a3d9a3ab774007708148f3ee9
  uses: nosborn/github-action-yamllint@v1
  with:
    # path to a custom configuration
    config_file: # optional
    # custom configuration (as YAML source)
    config_data: # optional
    # file(s) or directory
    file_or_dir: 
    # return non-zero exit code on warnings as well as errors
    strict: # optional
    - name: whitespace-linter
  # You may pin to the exact commit or the version.
  # uses: nosborn/github-action-whitespace-linter@69f42c0502dd4466cfec11f11c7d2c5a71ce93ee
  uses: nosborn/github-action-whitespace-linter@v1
  with:
    # files, directories, or globs
    files: 
    - name: CWTools Action
  # You may pin to the exact commit or the version.
  # uses: cwtools/cwtools-action@3ae04fb4516a620777959eb9d593d17313086806
  uses: cwtools/cwtools-action@v1.0.0
  with:
    # What game to use. Supported values: hoi4, ck2, eu4, ir, stellaris, vic2.
    game: 
    # Path to the mod folder in $GITHUB_WORKSPACE (root of repository). (Default: "" - root of repository itself)
    modPath: # optional, default is 
    # Path to the full cache file (cwb.bz2) in $GITHUB_WORKSPACE (root of repository). Use an empty string to use metadata from cwtools/cwtools-cache-files (Default: use metadata)
    cache: # optional, default is 
    # Whether to not use cache, and instead treat the project as a vanilla game installation folder - if you are a modder, you probably should not be using this. If True, cache input will be ignored (Default: False, set to anything other than 0 or blank for True)
    vanillaMode: # optional, default is 0
    # Which languages to check localisation for, space separated, lowercase (eg. "english spanish russian"). Note: May be different from game to game. (Default: english)
    locLanguages: # optional, default is english
    # What rules repository to use (Default: https://github.com/cwtools/cwtools-$INPUT_GAME-config.git)
    rules: # optional, default is 
    # What ref on rules repo to checkout (Default: master)
    rulesRef: # optional, default is master
    # Whether to only push offences in changed files (Default: True, set to 0 or blank for False)
    changedFilesOnly: # optional, default is 1
    # What CWTools offence categories to suppress, in JSON format: {"failure":[], "warning":[], "notice":[]}
    suppressedOffenceCategories: # optional, default is {"failure":[], "warning":[], "notice":[]}
    # Which files to completely ignore, in JSON format: ["path/from/root/repo/folder", "path/from/root/repo/folder"]
    suppressedFiles: # optional, default is []
    # Which CWTools.CLI version to use (Default: latest stable)
    CWToolsCLIVersion: # optional, default is 
    - name: Eslint check
  # You may pin to the exact commit or the version.
  # uses: Krizzu/eslint-check-action@a10fa11628d6ba82cd67c76b5fb7d1549d55039e
  uses: Krizzu/eslint-check-action@v1.1.0
  with:
    # GitHub token
    ghToken: 
    # Relative path to files/directories to run lint on.
    eslintFiles: # optional, default is .
    # Relative path to eslint config. Can either be ".js" config, ".eslintrc" or "package.json".
    eslintConfig: # optional, default is .eslintrc
    # File extension to run linting on.
    eslintExt: # optional, default is js, ts, jsx, tsx
    - name: Jest Code Coverage Report
  # You may pin to the exact commit or the version.
  # uses: ziishaned/jest-reporter-action@872c1051350ecaf625ba2490d68e7cb63854b44c
  uses: ziishaned/jest-reporter-action@0.1.1
  with:
    # Github token
    github-token: 
    # Specify a command to run the tests
    test-command: # optional
    - name: Run rubocop with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-rubocop@cdeaf0c191d62bcc651ae3a231c268f10b8ca1a5
  uses: reviewdog/action-rubocop@v1
  with:
    # GITHUB_TOKEN
    github_token: 
    # Rubocop version
    rubocop_version: # optional
    # Rubocop extensions
    rubocop_extensions: # optional, default is rubocop-rails rubocop-performance rubocop-rspec rubocop-i18n rubocop-rake
    # Rubocop flags. (rubocop <rubocop_flags>)
    rubocop_flags: # optional, default is 
    # Tool name to use for reviewdog reporter
    tool_name: # optional, default is rubocop
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.

    reporter: # optional, default is github-pr-check
    # Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
Default is added.

    filter_mode: # optional, default is added
    # Exit code for reviewdog when errors are found [true,false]
Default is `false`.

    fail_on_error: # optional, default is false
    # Additional reviewdog flags
    reviewdog_flags: # optional, default is 
    # The directory from which to look for and run Rubocop. Default '.'
    workdir: # optional, default is .
    - name: Autopep8 Action
  # You may pin to the exact commit or the version.
  # uses: creyD/autopep8_action@18f406b1d06eee7d2e8a2a449b02dc1c3b3e33a3
  uses: creyD/autopep8_action@v2.0
  with:
    # Commit message
    commit_message: # optional, default is Adjusted files for PEP-8 compliance
    # Commit options
    commit_options: # optional
    # File pattern used for `git add`
    file_pattern: # optional, default is *
    # Path autopep8 checks
    checkpath: # optional, default is .
    # Parameters for autopep8
    options: # optional, default is 
    # Should this script apply autopep8 directly or just warn?
    dry: # optional
    - name: Report-link-action
  # You may pin to the exact commit or the version.
  # uses: ad-m/report-link-action@d74dd3c9815fc723e49377ffb63b0ce94f2ad253
  uses: ad-m/report-link-action@v1.0.0
  with:
    # Token for the repo. Can be passed in using $\{{ secrets.GITHUB_TOKEN }}
    github_token: 
    - name: Ensure latest Go
  # You may pin to the exact commit or the version.
  # uses: jmhodges/ensure-latest-go@db34caa373314d0cbf407c7882e864418eb22f1a
  uses: jmhodges/ensure-latest-go@v1.0.2
  with:
    # A comma-seperated list of file paths to not update.
    exclude: # optional, default is 
    # A comma-seperated list of Dockerfiles to update when a new Go version is released. If set, it will override the default behavior of updating any `golang` image Dockerfile in the repo.
    dockerfiles: # optional, default is 
    # A comma-seperated list of Travis CI config files to update when a new Go version is released. If set, it will override the default behavior of updating (but not creating) the "go" setting in a top-level .travis.yml file.
    travisfiles: # optional, default is 
    - name: action-ebuild-test
  # You may pin to the exact commit or the version.
  # uses: hacking-gentoo/action-ebuild-test@80d7d6414f7e02c6b1a803e01481ea7d47812c81
  uses: hacking-gentoo/action-ebuild-test@v1.0.1
  with:
    # The authentiation token to use when creating pull requests.
    auth_token: 
    # The deploy key used when accessing the overlay repository.
    deploy_key: 
    # The overlay repository to operate on (eg. hacking-gentoo/overlay)
    overlay_repo: 
    # The repository branch to operate on. If none specified a topic branch named after the category/package will be used.
    overlay_branch: # optional
    # This is a package only ebuild for upstream source code.
    package_only: # optional
    - name: Sentry Release Action
  # You may pin to the exact commit or the version.
  # uses: dmandrade/sentry-release-github-action@5c675580de8528422da8918b26ed6eb83942f83f
  uses: dmandrade/sentry-release-github-action@v1
  with:
    # Version tag
    version: # optional, default is 
    # Deploy environment to associate with release
    environment: # optional, default is 
    - name: ember-cli-code-coverage check
  # You may pin to the exact commit or the version.
  # uses: mydea/ember-cli-code-coverage-action@63b38ca45ed6ad14ceb033a63642b8370093ed5a
  uses: mydea/ember-cli-code-coverage-action@v1.1.0
  with:
    # The GITHUB_TOKEN secret
    repo-token: # optional
    # The command to run your tests
    test-command: # optional, default is yarn test-coverage
    # The location of coverage summary.json file
    coverage-file: # optional, default is ./coverage/coverage-summary.json
    # 
    coverage-indicator: # optional, default is statements
    # 
    working-directory: # optional, default is ./
    - name: action-repoman
  # You may pin to the exact commit or the version.
  # uses: hacking-gentoo/action-repoman@74f6642bfcf4cf49add44956751351343930e5af
  uses: hacking-gentoo/action-repoman@v1.0.0
  - name: Run credo with reviewdog
  # You may pin to the exact commit or the version.
  # uses: red-shirts/reviewdog-action-credo@57671669d5e2170621e89536c7a031fb23264761
  uses: red-shirts/reviewdog-action-credo@v1.2
  with:
    # GITHUB_TOKEN.
    github_token: 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.
github-pr-review can use Markdown and add a link to rule page in reviewdog reports.

    reporter: # optional, default is github-pr-check
    - name: Archives Check
  # You may pin to the exact commit or the version.
  # uses: jpetrucciani/archives-check@3d09fc515137a781eda086f396f1163ea1dd6bf2
  uses: jpetrucciani/archives-check@0.12
  with:
    # File or directory to run archives on
    path: # optional, default is .
    # Comma separated list of rules to disable
    disable: # optional, default is 
    - name: Mypy Check
  # You may pin to the exact commit or the version.
  # uses: jpetrucciani/mypy-check@52335dab5432fe3b57c5d7527fd39db94c736e92
  uses: jpetrucciani/mypy-check@0.761
  with:
    # File or directory to run mypy on
    path: # optional, default is .
    - name: Python Linting
  # You may pin to the exact commit or the version.
  # uses: WhyNotHugo/python-linting@17bef49b0602da95c0cefea5b2d28f758f5fc2b9
  uses: WhyNotHugo/python-linting@v1.0.0
  - name: composer-unused
  # You may pin to the exact commit or the version.
  # uses: icanhazstring/composer-unused-ga@51aa06fc46625bf4b3560d7ff3de8b0be4c94fc1
  uses: icanhazstring/composer-unused-ga@1.0.1
  - name: StandardJS lint checks
  # You may pin to the exact commit or the version.
  # uses: goto-bus-stop/standard-action@ff0a0b317330647e4e1ace3fd00d3b41630c8955
  uses: goto-bus-stop/standard-action@v1.0.3
  with:
    # Globs to lint.
    files: # optional
    # Output format style, see https://eslint.org/docs/user-guide/formatters/. Default `stylish`.
    version: # default is stylish
    # Standard-compatible linter variant to use. ex. semistandard, happiness, doublestandard...
    linter: # default is standard
    # Annotate the diff UI with lint errors. Requires passing in env.GITHUB_TOKEN.
    annotate: # optional
    - name: Run hadolint with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-hadolint@d75ed2297c693a99f137250f0035ae53cadedc26
  uses: reviewdog/action-hadolint@v1
  with:
    # GITHUB_TOKEN
    github_token: # optional, default is ${{ github.token }}
    # Hadolint flags. (hadolint <hadolint_flags>)
    hadolint_flags: # optional, default is 
    # List of ignored rules. (hadolint --ignore RULE1 --ignore RULE2)
    hadolint_ignore: # optional, default is 
    # Tool name to use for reviewdog reporter
    tool_name: # optional, default is hadolint
    # List of files and folders to exclude
    exclude: # optional, default is 
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.

    reporter: # optional, default is github-pr-check
    # Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
Default is added.

    filter_mode: # optional, default is added
    # Exit code for reviewdog when errors are found [true,false]
Default is `false`.

    fail_on_error: # optional, default is false
    # Additional reviewdog flags
    reviewdog_flags: # optional, default is 
    - name: easy configurable php-stan
  # You may pin to the exact commit or the version.
  # uses: zalexki/phpstan-action@c55fb28c14a1f8efdb6c35dea0be2534cece3374
  uses: zalexki/phpstan-action@0.1
  with:
    # Add some configs
    other-cmds: # optional, default is analyse classes -c /base.neon
   - name: Promtool GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: peimanja/promtool-github-actions@ae9a7293b5a60daa95b5b92814dd7cc25ffd03f4
  uses: peimanja/promtool-github-actions@v0.0.1
  with:
    # Promtool subcommand to execute (configs or rules).
    promtool_actions_subcommand: 
    # Path to files. Can be something like `configs/*.yml` or `alert_rules/*.yml`.
    promtool_actions_files: 
    # Promtool version to install.
    promtool_actions_version: # optional, default is latest
    # Whether or not to comment on pull requests.
    promtool_actions_comment: # optional, default is true
    - name: Attractor Action
  # You may pin to the exact commit or the version.
  # uses: julianrubisch/attractor-action@d766a8e294d0b45cda7d262c34d18bb28f76f64b
  uses: julianrubisch/attractor-action@v0.1.1
  with:
    # Define a specific version of Attractor, otherwise uses latest
    version: # optional, default is latest
    # Bundle your gemfile instead of doing a gem install
    bundle: # optional, default is false
    # Specify a directory
    file_prefix: # optional, default is 
    # Set this to true if you would like to check javascript
    javascript: # optional, default is false
    - name: Python Pylint Github Action
  # You may pin to the exact commit or the version.
  # uses: fylein/python-pylint-github-action@cd8c363096fbae2650aef4bd02c670cb8a0c02c8
  uses: fylein/python-pylint-github-action@v4
  - name: assing issue to project
  # You may pin to the exact commit or the version.
  # uses: AlexisMateo/issue-to-project-action@3800dcd0d8b6f15a9dae417d08e64ef7b8a04e85
  uses: AlexisMateo/issue-to-project-action@0.0.1
  with:
    # admin github token
    github-token: 
    # the path to the project
    project_path: 
    - name: FTL BugCatcher
  # You may pin to the exact commit or the version.
  # uses: faster-than-light/github-action@9e9b3007023b9811dc75a1460dbfc94f2dbdb088
  uses: faster-than-light/github-action@0.1.0
  with:
    # Encrypted BugCatcher SID token
    ftl-sid: 
    # "high", "low", "medium" threshold for triggering failure
    severity-threshold: # optional
    - name: ESLint checker
  # You may pin to the exact commit or the version.
  # uses: ninosaurus/eslint-check@30ce7263e3f4b0bebc3cc06897bdf4ab8524a424
  uses: ninosaurus/eslint-check@v5.3.1
  with:
    # github security token
    repo-token: 
    # relative directory to node_modules
    custom-directory: 
    # relative path to eslint config file eg. .eslintrc
    eslint-config-path: 
    - name: Some test action 12345
  # You may pin to the exact commit or the version.
  # uses: icew1nd/some-test-action-12345@bdb8340e9ad23a7fcb6e51f40e6cf1e94045e1e8
  uses: icew1nd/some-test-action-12345@v.1.0.11
  with:
    # Who to greet
    who-to-greet: # default is World
    - name: Htaccess CLI
  # You may pin to the exact commit or the version.
  # uses: madewithlove/htaccess-cli-github-action@4f2d187f1ce23e751fbf59aa7018b810fb610c56
  uses: madewithlove/htaccess-cli-github-action@v1.0.0
  with:
    # The url to test the htaccess file against
    url: 
    # The url you expect as output, CI will fail if this is not the real result
    expected-url: 
    - name: FIXME alert
  # You may pin to the exact commit or the version.
  # uses: bbugh/action-fixme-check@72560c0b725b59caa148e9fa3e72b5c649ee071e
  uses: bbugh/action-fixme-check@v1.0.0
  - name: flake8 with args
  # You may pin to the exact commit or the version.
  # uses: jonasrk/flake8-action@b380e86bcb2320aa2f997305c57294a4e9d5d225
  uses: jonasrk/flake8-action@0.0.1
  with:
    # Runs flake8 and accepts args.
    checkName: 
    - name: Scan with Sonar Scanner
  # You may pin to the exact commit or the version.
  # uses: mathrix-education/sonar-scanner@f40ca3aebb6f72ec4887de752b0d739010122504
  uses: mathrix-education/sonar-scanner@1.0.0
  with:
    # The Sonar Scanner version.
    version: 
    # Use the bundled JRE.
    with-jre: # optional, default is false
    # Default Sonar Scanner options. Read as a YAML document (you may use the pipe '|' YAML operator).
    options: # optional
    # Install TypeScript during setup (simply run `npm i typescript`). Required if your project uses Typescript and if the node module `typescript` is  not already installed.

    typescript: # optional, default is false
    # Fetch a full clone of the repository. Useful when using the SCM feature of Sonar Scanner.
    unshallow: # optional, default is false
    # Run Sonar Scanner immediately in the current working directory.
    scan: # optional, default is false
    # Additionnal flag to append during the scan. Ignored if `scan` is false.
    args: # optional
    - name: Setup clj-kondo
  # You may pin to the exact commit or the version.
  # uses: DeLaGuardo/setup-clj-kondo@822352b8aa37d5c94135e67f7b4e2f46c08008a8
  uses: DeLaGuardo/setup-clj-kondo@v1
  with:
    # desired version of clj-kondo to install
    version: # optional
    - name: easy configurable php-cs-fixer
  # You may pin to the exact commit or the version.
  # uses: zalexki/php-cs-fixer-action@2e8370e3b92219ff8427cc4d556641f761e86cb3
  uses: zalexki/php-cs-fixer-action@1.0.1
  with:
    # Add some configs
    other-cmds: # optional, default is --dry-run --diff --using-cache=no --diff-format udiff
    - name: easy configurable php-cs-fixer
  # You may pin to the exact commit or the version.
  # uses: zalexki/php-cs-fixer-action@2e8370e3b92219ff8427cc4d556641f761e86cb3
  uses: zalexki/php-cs-fixer-action@1.0.1
  with:
    # Add some configs
    other-cmds: # optional, default is --dry-run --diff --using-cache=no --diff-format udiff
    - name: Yamllint Github Action
  # You may pin to the exact commit or the version.
  # uses: karancode/yamllint-github-action@dd59165b84d90d37fc919c3c7dd84c7e37cd6bfb
  uses: karancode/yamllint-github-action@v2.0.0
  with:
    # File or Directory to do yamllint on
    yamllint_file_or_dir: # optional, default is .
    # Use Strict
    yamllint_strict: # optional, default is 0
    # Custom yamllint config path
    yamllint_config_filepath: # optional, default is 
    # Custom configuration (as YAML source)
    yamllint_config_datapath: # optional, default is 
    # format for parsing output
    yamllint_format: # optional, default is 
    # Comment yamllint output
    yamllint_comment: # optional, default is false
    - name: Run reek with reviewdog
  # You may pin to the exact commit or the version.
  # uses: reviewdog/action-reek@da8615ab4829aa2613872dc170f33792498764fd
  uses: reviewdog/action-reek@v1
  with:
    # GITHUB_TOKEN
    github_token: 
    # Reek version
    reek_version: # optional
    # Reek flags. (reek --single-line <reek_flags>)
    reek_flags: # optional, default is 
    # Tool name to use for reviewdog reporter
    tool_name: # optional, default is reek
    # Report level for reviewdog [info,warning,error]
    level: # optional, default is error
    # Reporter of reviewdog command [github-pr-check,github-pr-review].
Default is github-pr-check.

    reporter: # optional, default is github-pr-check
    # Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
Default is added.

    filter_mode: # optional, default is added
    # Exit code for reviewdog when errors are found [true,false]
Default is `false`.

    fail_on_error: # optional, default is false
    # Additional reviewdog flags
    reviewdog_flags: # optional, default is 
    - name: conventional-pr-title
  # You may pin to the exact commit or the version.
  # uses: aslafy-z/conventional-pr-title-action@0876f5e8a05934417da3e354ba2608726ca1740b
  uses: aslafy-z/conventional-pr-title-action@v2.2.0
  with:
    # Description of the status check if validation succeeds.
    success-state: # default is Title follows the specification.
    # Description of the status check if validation fails.
    failure-state: # default is Title does not follow the specification.
    # Persistent status check context key
    context-name: # default is conventional-pr-title
    # Conventional changelog preset to use.
    preset: # default is conventional-changelog-angular
    - name: Generate Documentation
  # You may pin to the exact commit or the version.
  # uses: vargiuscuola/genshdoc@0f2a1895670c474de679631a33eae9369743af5f
  uses: vargiuscuola/genshdoc@v1.0
  - name: csv-lint
  # You may pin to the exact commit or the version.
  # uses: blackstar257/docker-csvlint@fe49f826f65824b070592df4abbc4a201221f55b
  uses: blackstar257/docker-csvlint@0.0.1
  - name: GolangCI-Lint Action
  # You may pin to the exact commit or the version.
  # uses: matoous/golangci-lint-action@8395bf699f28bab78ec7fe10ab72afd14f567b21
  uses: matoous/golangci-lint-action@v1.23.3
  with:
    # Path of the GolangCI-Lint config file
    config: # optional
    - name: Chef Delivery Action
  # You may pin to the exact commit or the version.
  # uses: actionshub/chef-delivery@2b4916be5b556dc0191b01e7bff064ff2829a850
  uses: actionshub/chef-delivery@v1.0.0
  - name: YAML Lint Action
  # You may pin to the exact commit or the version.
  # uses: actionshub/yamllint@2303bd3248e1239dbe3bbec8204251f4d6449b94
  uses: actionshub/yamllint@v1.0.0
  - name: Lintly-Flake8
  # You may pin to the exact commit or the version.
  # uses: grantmcconnaughey/lintly-flake8-github-action@ffa7dc0468c57e851592b84d509de1d7c6b88acf
  uses: grantmcconnaughey/lintly-flake8-github-action@v1.0
  with:
    # The GitHub API token to use for creating PR reviews
    token: 
    # Fail if *any* violations are detected or only *new* ones (valid values are "new" or "any")
    failIf: # optional, default is new
    # Args to pass to the flake8 executable
    args: # optional, default is .
    - name: W ES Lint
  # You may pin to the exact commit or the version.
  # uses: avgar/awesome-lint@d9eaf441a7999498968b858469f5f1e053c7e43e
  uses: avgar/awesome-lint@1.0.0
  with:
    # Filename to lint
    filename: # optional
    - name: Run PHP_CodeSniffer with reviewdog
  # You may pin to the exact commit or the version.
  # uses: hrysd/action-php_codesniffer@bd1019a291c5118d8b66c46fe58edd6437d369bd
  uses: hrysd/action-php_codesniffer@v1.0.0
  with:
    # API TOKEN
    github_token: 
    # Report level for reviewdog command
    level: # optional, default is error
    # Reporter for reviewdog command
    reporter: # optional, default is github-pr-check
    # Coding standard or path to configuration file
    standard: 
    # Directory to check by PHP_CodeSniffer
    target_directory: 
    - name: Codespell action
  # You may pin to the exact commit or the version.
  # uses: plettich/python_codespell_action@853c7341405606202c1b15de66ac7c5cfdb54b67
  uses: plettich/python_codespell_action@v0.1
  with:
    # Auth token used to fetch the repository. The token is stored in the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the token from the git config. [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)

    token: # default is ${{ github.token }}
    - name: Container Structure Test Action
  # You may pin to the exact commit or the version.
  # uses: plexsystems/container-structure-test-action@fc4492b7bf1d5bbca12490f416808ea75c1ae75e
  uses: plexsystems/container-structure-test-action@v0.2.0
  with:
    # Image (including :tag) to test
    image: # optional
    # Path (relative to the root of the repository) to the test config
    config: # optional
    - name: Gif Guardian
  # You may pin to the exact commit or the version.
  # uses: jamsinclair/gif-guardian-action@0d0b6498e397b6d1b1ed6456917f261a67ba0ab5
  uses: jamsinclair/gif-guardian-action@v0.1.1
  with:
    # The GITHUB_TOKEN secret
    github_token: 
    # The label to add to Pull Requests without a gif in their body
    label: 
    # When set to `true`, Pull Requests without gifs will receive a failing status check
    strict: # optional
    - name: Sun-CI
  # You may pin to the exact commit or the version.
  # uses: hieudt/sun-phpcs@7857e342b80a84f1f8f116a564d0d66b7eccdd11
  uses: hieudt/sun-phpcs@v1.0.2
  with:
    # Path running check phpcs
    path: # default is app
    - name: GitHub Action for Standalone ESLint
  # You may pin to the exact commit or the version.
  # uses: 123FLO321/action-eslint-standalone@fc33f1337a4ad6d3396cc20adccfc22375ad9336
  uses: 123FLO321/action-eslint-standalone@1.0.0
  - name: DX Scanner Action
  # You may pin to the exact commit or the version.
  # uses: DXHeroes/dx-scanner@ca31b5baf815110c57a9d079ecbf67f2bb4bbd40
  uses: DXHeroes/dx-scanner@v1
  with:
    # Github API token (https://github.com/settings/tokens/new)
    github_token: # optional
    - name: Trigger Buildkite Pipeline
  # You may pin to the exact commit or the version.
  # uses: buildkite/trigger-pipeline-action@d03b6f2760252274dc019e1298095c3b61baeaf8
  uses: buildkite/trigger-pipeline-action@v1.2.0
  - name: Terraform Apply for GorillaStack
  # You may pin to the exact commit or the version.
  # uses: GorillaStack/github-action-apply-on-merge@71fab58db0a839b1e9b34e87601a5e4347c52c88
  uses: GorillaStack/github-action-apply-on-merge@v0.1.0
  with:
    # The action type (currently "validate" and "apply" are available)
    action: # default is validate
    # The name of the tfstate bucket stack
    stack_name: # default is github-actions-gorillastack-tfstate
    # The region in which you deployed the tfstate bucket stack
    aws_default_region: # default is us-east-1
    # The AWS Access Key Id for the user with privileges to access the tfstate bucket
    aws_access_key_id: # default is defaulted-for-everything-but-apply
    # The AWS Secret Access Key for the user with privileges to access the tfstate bucket
    aws_secret_access_key: # default is defaulted-for-everything-but-apply
    # GorillaStack API Key, which is read-write or read-only, tied to your user identity
    gorillastack_api_key: # default is defaulted-for-everything-but-apply
    # GorillaStack Team Id, sets context of which team/tenant you are targeting
    gorillastack_team_id: # default is defaulted-for-everything-but-apply
    - name: Deploy to Cloudflare Workers with Wrangler
  # You may pin to the exact commit or the version.
  # uses: cloudflare/wrangler-action@21f14faa062c33c938e3f37c30d52021bed521cb
  uses: cloudflare/wrangler-action@1.2.0
  with:
    # (Legacy) Your Cloudflare API Key
    apiKey: # optional
    # Your Cloudflare API Token
    apiToken: # optional
    # (Legacy) Your Cloudflare Email
    email: # optional
    # The environment you'd like to publish your Workers project to - must be defined in wrangler.toml
    environment: # optional
    # The relative path which Wrangler commands should be run from
    workingDirectory: # optional
    # The version of Wrangler you'd like to use to publish your Workers project
    wranglerVersion: # optional
    # A new line deliminated string of environment variable names that should be configured as Worker secrets
    secrets: # optional
    - name: HashiCorp - Setup Terraform
  # You may pin to the exact commit or the version.
  # uses: hashicorp/setup-terraform@d22444889af304a44b997011fbabb81ff705a7b4
  uses: hashicorp/setup-terraform@v1.2.1
  with:
    # The hostname of a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file. Defaults to `app.terraform.io`.
    cli_config_credentials_hostname: # optional, default is app.terraform.io
    # The API token for a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file.
    cli_config_credentials_token: # optional
    # The version of Terraform CLI to install. Instead of full version string you can also specify constraint string starting with "<" (for example `<1.13.0`) to install the latest version satisfying the constraint. A value of `latest` will install the latest version of Terraform CLI. Defaults to `latest`.
    terraform_version: # optional, default is latest
    # Whether or not to install a wrapper to wrap subsequent calls of the `terraform` binary and expose its STDOUT, STDERR, and exit code as outputs named `stdout`, `stderr`, and `exitcode` respectively. Defaults to `true`.
    terraform_wrapper: # optional, default is true
    - name: Set up gcloud Cloud SDK environment
  # You may pin to the exact commit or the version.
  # uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
  uses: google-github-actions/setup-gcloud@v0.2.0
  with:
    # Version of the gcloud SDK to install. If unspecified or set to "latest",
the latest available gcloud SDK version for the target platform will be
installed. Example: "290.0.1".
    version: # optional, default is latest
    # Service account email address to use for authentication. This is required
for legacy .p12 keys but can be omitted for .json keys. This is usually of
the format <name>@<project-id>.iam.gserviceaccount.com.
    service_account_email: # optional
    # Service account key to use for authentication. This should be the JSON
formatted private key which can be exported from the Cloud Console. The
value can be raw or base64-encoded.
    service_account_key: # optional
    # ID of the Google Cloud project. If provided, this will configure gcloud to
use this project ID by default for commands. Individual commands can still
override the project using the --project flag which takes precedence.
    project_id: # optional
    # Export the provided credentials as Google Default Application Credentials.
This will make the credentials available to later steps via the
GOOGLE_APPLICATION_CREDENTIALS environment variable. Future steps that
consume Default Application Credentials will automatically detect and use
these credentials.
    export_default_credentials: # optional
    - name: Lightstep Services Change Report
  # You may pin to the exact commit or the version.
  # uses: lightstep/lightstep-action-snapshot@166ec5f31d611858ebe9ed3437848e8fe675fb89
  uses: lightstep/lightstep-action-snapshot@v0.2.1
  with:
    # The organization associated with your Lightstep account (usually your company name)
    lightstep_organization: # optional
    # The Lightstep project associated with this repository
    lightstep_project: # optional
    # Only show services in the snapshot from this comma-separated list
    lightstep_service_filter: # optional
    # The query to use when taking a snapshot
    lightstep_snapshot_query: # optional
    # The Lightstep snapshot id to summarize
    lightstep_snapshot_id: # optional
    # The Lightstep snapshot id to compare with lightstep_snapshot_id
    lightstep_snapshot_compare_id: # optional
    # The key to access the Lightstep Public API
    lightstep_api_key: # optional
    # Github API Token
    github_token: # optional
    # If set to true, will not add a comment to pull-requests
    disable_comment: # optional
    - name: Lightstep Pre-Deploy Check
  # You may pin to the exact commit or the version.
  # uses: lightstep/lightstep-action-predeploy@22bec553a6d0fb3de5026acb1159085601f76408
  uses: lightstep/lightstep-action-predeploy@v0.2.6
  with:
    # The organization associated with your Lightstep account (usually your company name)
    lightstep_organization: # optional
    # The Lightstep project associated with this repository
    lightstep_project: # optional
    # The key to access the Lightstep Public API
    lightstep_api_key: # optional
    # The token to access the Rollbar API
    rollbar_api_token: # optional
    # The token to access the PagerDuty API
    pagerduty_api_token: # optional
    # If set to true, collapse all conditions to a single table row
    rollup_conditions: # optional
    # If set to true, will not add a comment to pull-requests
    disable_comment: # optional
    - name: AWS CloudFormation "Deploy CloudFormation Stack" Action for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: aws-actions/aws-cloudformation-github-deploy@dfbee8a4fec90af61b71bafda3890f8c4a2075ef
  uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
  with:
    # The name of the CloudFormation stack
    name: 
    # The path or URL to the CloudFormation template
    template: 
    # The comma-delimited list of stack template capabilities to acknowledge. Defaults to 'CAPABILITY_IAM'
    capabilities: # optional, default is CAPABILITY_IAM
    # The parameters to override in the stack inputs. The list is comma-delimited, with each entry formatted as <ParameterName>=<ParameterValue>.
    parameter-overrides: # optional
    # If the CloudFormation change set is empty, do not fail. Defaults to '0' (will fail on empty change set)
    no-fail-on-empty-changeset: # optional, default is 0
    # Disable rollback of the stack if stack creation fails. Defaults to '0' (will rollback if stack creation fails). This input is only used for stack creation, not for stack update
    disable-rollback: # optional, default is 0
    # The amount of time that can pass before the stack status becomes CREATE_FAILED. This input is only used for stack creation, not for stack update
    timeout-in-minutes: # optional
    # The comma-delimited list of Amazon SNS topic ARNs to publish stack related events
    notification-arns: # optional
    # The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that AWS CloudFormation assumes to create the stack. AWS CloudFormation uses the role's credentials to make calls on your behalf. AWS CloudFormation always uses this role for all future operations on the stack. As long as users have permission to operate on the stack, AWS CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack
    role-arn: # optional
    # Key-value pairs to associate with this stack. This input should be JSON-formatted, for example [ { "Key": "string", "Value": "string" } ]
    tags: # optional
    # Whether to enable termination protection on the specified stack. Defaults to '0' (terminated protection will be disabled) This input is only used for stack creation, not for stack update
    termination-protection: # optional, default is 0
    - name: Amazon ECR "Login" Action for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
  uses: aws-actions/amazon-ecr-login@v1
  with:
    # A comma-delimited list of AWS account IDs that are associated with the ECR registries. If you do not specify a registry, the default ECR registry is assumed.
    registries: # optional
    # Whether to skip explicit logout of the registries during post-job cleanup. Exists for backward compatibility on self-hosted runners. Not recommended.
    skip-logout: # optional
    - name: EKS on Fargate
  # You may pin to the exact commit or the version.
  # uses: aws-actions/amazon-eks-fargate@fa91b1ce6e342eb17a1d57df976506d02f074640
  uses: aws-actions/amazon-eks-fargate@v0.1.1
  - name: Amazon ECS "Render Task Definition" Action for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
  uses: aws-actions/amazon-ecs-render-task-definition@v1
  with:
    # The path to the ECS task definition JSON file
    task-definition: 
    # The name of the container defined in the containerDefinitions section of the ECS task definition
    container-name: 
    # The URI of the container image to insert into the ECS task definition
    image: 
   - name: "Configure AWS Credentials" Action For GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
  uses: aws-actions/configure-aws-credentials@v1
  with:
    # AWS Access Key ID. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
    aws-access-key-id: # optional
    # AWS Secret Access Key. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
    aws-secret-access-key: # optional
    # AWS Session Token
    aws-session-token: # optional
    # AWS Region, e.g. us-east-2
    aws-region: 
    # Whether to set the AWS account ID for these credentials as a secret value, so that it is masked in logs. Valid values are 'true' and 'false'. Defaults to true
    mask-aws-account-id: # optional
    # Use the provided credentials to assume an IAM role and configure the Actions environment with the assumed role credentials rather than with the provided credentials
    role-to-assume: # optional
    # Role duration in seconds (default: 6 hours)
    role-duration-seconds: # optional
    # Role session name (default: GitHubActions)
    role-session-name: # optional
    # The external ID of the role to assume
    role-external-id: # optional
    # Skip session tagging during role assumption
    role-skip-session-tagging: # optional
    - name: Amazon ECS "Deploy Task Definition" Action for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
  uses: aws-actions/amazon-ecs-deploy-task-definition@v1
  with:
    # The path to the ECS task definition file to register
    task-definition: 
    # The name of the ECS service to deploy to. The action will only register the task definition if no service is given.
    service: # optional
    # The name of the ECS service's cluster.  Will default to the 'default' cluster
    cluster: # optional
    # Whether to wait for the ECS service to reach stable state after deploying the new task definition. Valid value is "true". Will default to not waiting.
    wait-for-service-stability: # optional
    # How long to wait for the ECS service to reach stable state, in minutes (default: 30 minutes, max: 6 hours). For CodeDeploy deployments, any wait time configured in the CodeDeploy deployment group will be added to this value.
    wait-for-minutes: # optional
    # The path to the AWS CodeDeploy AppSpec file, if the ECS service uses the CODE_DEPLOY deployment controller. Will default to 'appspec.yaml'.
    codedeploy-appspec: # optional
    # The name of the AWS CodeDeploy application, if the ECS service uses the CODE_DEPLOY deployment controller. Will default to 'AppECS-{cluster}-{service}'.
    codedeploy-application: # optional
    # The name of the AWS CodeDeploy deployment group, if the ECS service uses the CODE_DEPLOY deployment controller. Will default to 'DgpECS-{cluster}-{service}'.
    codedeploy-deployment-group: # optional
    # Whether to force a new deployment of the service. Valid value is "true". Will default to not force a new deployment.
    force-new-deployment: # optional
    - name: Amazon ECS "Deploy Task Definition" Action for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
  uses: aws-actions/amazon-ecs-deploy-task-definition@v1
  with:
    # The path to the ECS task definition file to register
    task-definition: 
    # The name of the ECS service to deploy to. The action will only register the task definition if no service is given.
    service: # optional
    # The name of the ECS service's cluster.  Will default to the 'default' cluster
    cluster: # optional
    # Whether to wait for the ECS service to reach stable state after deploying the new task definition. Valid value is "true". Will default to not waiting.
    wait-for-service-stability: # optional
    # How long to wait for the ECS service to reach stable state, in minutes (default: 30 minutes, max: 6 hours). For CodeDeploy deployments, any wait time configured in the CodeDeploy deployment group will be added to this value.
    wait-for-minutes: # optional
    # The path to the AWS CodeDeploy AppSpec file, if the ECS service uses the CODE_DEPLOY deployment controller. Will default to 'appspec.yaml'.
    codedeploy-appspec: # optional
    # The name of the AWS CodeDeploy application, if the ECS service uses the CODE_DEPLOY deployment controller. Will default to 'AppECS-{cluster}-{service}'.
    codedeploy-application: # optional
    # The name of the AWS CodeDeploy deployment group, if the ECS service uses the CODE_DEPLOY deployment controller. Will default to 'DgpECS-{cluster}-{service}'.
    codedeploy-deployment-group: # optional
    # Whether to force a new deployment of the service. Valid value is "true". Will default to not force a new deployment.
    force-new-deployment: # optional
    - name: OpenShift Client Installer
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/oc-installer@a129dec08aa1cd54ee1e0ac0ebcfbf7b12720582
  uses: redhat-actions/oc-installer@v1
  with:
    # "oc version to install. It can be a version (eg. 4.6) or a URL pointing to an oc download.
If left blank, the latest oc is installed."

    oc_version: # default is latest
    - name: Await Taktile Deployment
  # You may pin to the exact commit or the version.
  # uses: taktile-org/await-taktile-deployment-action@a4fc46fe2d0d4ef6dc52ed91edfd01f77a919783
  uses: taktile-org/await-taktile-deployment-action@v0.0.3
  with:
    # Your Taktile API key
    TKTL_API_KEY: 
    - name: Codefresh pipeline runner
  # You may pin to the exact commit or the version.
  # uses: codefresh-io/codefresh-pipeline-runner@c563a2bb98a7b8522192aaabf79ee9504141f8dc
  uses: codefresh-io/codefresh-pipeline-runner@v7
  with:
    # codefresh cli build variables, see https://codefresh-io.github.io/cli/pipelines/run-pipeline/#setting-variables-through-the-command for more information.
    args: # optional
    - name: Knative Service Manager
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/kn-service-manager@9d456952c2b59c36db2bb2b83adfa983b1c787a4
  uses: redhat-actions/kn-service-manager@v1
  with:
    # The Knative Service Name
    service_name: 
    # The Kubernetes Namespace to deploy to. Defaults to current context's namespace.
    namespace: # optional
    # The Knative service command, accepted commands are create, update, apply and delete
    command: # optional, default is create
    # The Knative Service Image
    container_image: 
    # Any extra arguments to append to the kn <command>
    kn_extra_args: # optional
    # The registry user to use to create the image pull secret
    registry_user: # optional
    # The registry user password
    registry_password: # optional
    # "Pass --force to kn create. If the service already exists,
the service will be replaced, instead of kn create failing.
This input has no effect if command is not create"

    force_create: # optional, default is false
    - name: Knative Service Manager
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/kn-service-manager@9d456952c2b59c36db2bb2b83adfa983b1c787a4
  uses: redhat-actions/kn-service-manager@v1
  with:
    # The Knative Service Name
    service_name: 
    # The Kubernetes Namespace to deploy to. Defaults to current context's namespace.
    namespace: # optional
    # The Knative service command, accepted commands are create, update, apply and delete
    command: # optional, default is create
    # The Knative Service Image
    container_image: 
    # Any extra arguments to append to the kn <command>
    kn_extra_args: # optional
    # The registry user to use to create the image pull secret
    registry_user: # optional
    # The registry user password
    registry_password: # optional
    # "Pass --force to kn create. If the service already exists,
the service will be replaced, instead of kn create failing.
This input has no effect if command is not create"

    force_create: # optional, default is false
    - name: Run Runbook in Octopus Deploy
  # You may pin to the exact commit or the version.
  # uses: OctopusDeploy/run-runbook-action@042dd45c396e343ebf30ebdeb61be4266b9de03a
  uses: OctopusDeploy/run-runbook-action@v1.0.0
  with:
    # The API key used to access Octopus Deploy. You must provide an API key or username and password. If the guest account is enabled, a key of API-GUEST may be used. It is strongly recommended that this value retrieved from a GitHub secret.
    api_key: # optional
    # Cancel the deployment if the deployment_timeout is exceeded (the default timeout is 10 minutes).
    cancel_on_timeout: # optional, default is false
    # The path to a configuration file of default values with one "key=value" per line.
    config_file: # optional
    # Enable debug logging.
    debug: # optional, default is false
    # A comma-delimited list of environments in Octopus Deploy in which to run (i.e. "Dev,Test,Prod").
    environments: # optional
    # A comma-separated list of machine names to exclude in the deployed environment. If empty, all machines in the environment will be considered.
    exclude_machines: # optional
    # Force download of installed packages.
    force_package_download: # optional, default is false
    # Use Guided Failure mode.
    guided_failure: # optional, default is false
    # Ignore certificate errors when communicating with Octopus Deploy. Warning: enabling this option creates a security vulnerability.
    ignore_ssl_errors: # optional, default is false
    # The log level; valid options are "verbose", "debug", "information", "warning", "error", and "fatal".
    log_level: # optional, default is debug
    # Print the raw log of failed tasks.
    no_raw_log: # optional, default is false
    # The time at which scheduled runbook run should expire, specified as any valid DateTimeOffset format, and assuming the time zone is the current local time zone.
    no_run_after: # optional
    # The password to used to authenticate with Octopus Deploy. It is strongly recommended to retrieve this value from a GitHub secret.
    password: # optional
    # The name or ID of the project associated with this runbook.
    project: 
    # The URL of a proxy to use (i.e. https://proxy.example.com).
    proxy: # optional
    # The password used to connect to a proxy. It is strongly recommended to retrieve this value from a GitHub secret. If proxy_username and proxy_password are omitted and proxy URL is specified, the default credentials are used.
    proxy_password: # optional
    # The username used to connect to a proxy. It is strongly recommended to retrieve this value from a GitHub secret.
    proxy_username: # optional
    # Redirect the raw log of failed tasks to a file.
    raw_log_file: # optional
    # The time at which runbook run should start (scheduled run), specified as any valid DateTimeOffset format, and assuming the time zone is the current local time zone.
    run_at: # optional
    # The name or ID of the runbook. If the name is supplied, the project input value must also be specified.
    runbook: # optional
    # The maximum length of time that the console session will wait for the runbook run to finish. Note: This will not stop the run. This input requires the wait_for_run input value to be true (format: HH:MM:SS). The default is 10 minutes.
    run_timeout: # optional, default is 00:10:00
    # The base URL hosting Octopus Deploy (i.e. "https://octopus.example.com/"). It is recommended to retrieve this value from an environment variable.
    server: # optional
    # Show progress of the runbook.
    show_progress: # optional, default is false
    # Skip a step by name.
    skip: # optional
    # The name or ID of a space within which this command will be executed. If omitted, the default space will be used.
    space: # optional
    # A comma-separated list of machine names to target in the deployed environment. If not specified all machines in the environment will be considered.
    specific_machines: # optional
    # Create a deployment for the tenant with this name or ID; specify this argument multiple times to add multiple tenants or use a wildcard ("*") to deploy to all tenants who are ready for this release (according to lifecycle).
    tenant: # optional
    # Create a deployment for tenants matching this tag; specify this argument multiple times to build a query/filter with multiple tags.
    tenant_tag: # optional
    # A timeout value in seconds for network operations.
    timeout: # optional, default is 600
    # The username used to authenticate with Octopus Deploy. You must provide an apiKey or username and password. It is strongly recommended to retrieve this value from a GitHub secret.
    username: # optional
    # Values for any prompted variables in the format, Label:Value. For JSON values, embedded quotation marks should be escaped with a backslash.
    variable: # optional
    # Indicates whether or not to wait synchronously for deployment to finish.
    wait_for_run: # optional, default is false
    - name: Push To Registry
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/push-to-registry@97623df94312db8bb23fd8c42b747583175b999d
  uses: redhat-actions/push-to-registry@v2
  with:
    # Name of the image to push (e.g. username/imagename or imagename)
    image: 
    # The tag or tags of the image to push. For multiple tags, seperate by a space. For example, "latest v1"
    tags: # optional, default is latest
    # Hostname and optional namespace to push the image to (eg. quay.io/username or quay.io)
    registry: 
    # Username to use as credential to authenticate to the registry
    username: # optional
    # Password to use as credential to authenticate to the registry
    password: # optional
    # Verify TLS certificates when contacting the registry
    tls-verify: # optional, default is true
    # After copying the image, write the digest of the resulting image to the file.
By default, the filename will be determined from the image and tag.
The contents of this file are the digest output.

    digestfile: # optional
    # Extra args to be passed to podman push.
Separate arguments by newline. Do not use quotes - @actions/exec will do the quoting for you.

    extra-args: # optional
    - name: Install Octopus CLI
  # You may pin to the exact commit or the version.
  # uses: OctopusDeploy/install-octopus-cli-action@aee5b620e9107e6ef3ae0cbd25dfde10e0910168
  uses: OctopusDeploy/install-octopus-cli-action@v1.1.6
  with:
    # Octopus CLI version
    version: # optional, default is latest
    - name: Push Package to Octopus Deploy
  # You may pin to the exact commit or the version.
  # uses: OctopusDeploy/push-package-action@db2b64b77368373659086c2b2631b02019fdcca0
  uses: OctopusDeploy/push-package-action@v1.0.1
  with:
    # The API key used to access Octopus Deploy. You must provide an API key or username and password. If the guest account is enabled, a key of API-GUEST may be used. It is strongly recommended that this value retrieved from a GitHub secret.
    api_key: # optional
    # The path to a configuration file of default values with one "key=value" per line.
    config_file: # optional
    # Enable debug logging.
    debug: # optional, default is false
    # Ignore certificate errors when communicating with Octopus Deploy. Warning: enabling this option creates a security vulnerability.
    ignore_ssl_errors: # optional, default is false
    # The log level; valid options are "verbose", "debug", "information", "warning", "error", and "fatal".
    log_level: # optional, default is debug
    # Determines the action to perform with package if it already exists in the repository. Valid values are "FailIfExists", "OverwriteExisting", and "IgnoreIfExists".
    overwrite_mode: # optional, default is FailIfExists
    # A comma-delimited list of packages to push to Octopus Deploy (i.e. package1,package2).
    packages: # optional
    # The password to used to authenticate with Octopus Deploy. It is strongly recommended to retrieve this value from a GitHub secret.
    password: # optional
    # The URL of a proxy to use (i.e. https://proxy.example.com).
    proxy: # optional
    # The password used to connect to a proxy. It is strongly recommended to retrieve this value from a GitHub secret. If proxy_username and proxy_password are omitted and proxy URL is specified, the default credentials are used.
    proxy_password: # optional
    # The username used to connect to a proxy. It is strongly recommended to retrieve this value from a GitHub secret.
    proxy_username: # optional
    # If the package already exists in the repository, the default behavior is to reject the new package being pushed. You can pass this flag to overwrite the existing package. This flag may be deprecated in a future version; passing it is the same as using "OverwriteExisting" for the input, overwrite_mode.
    release_existing: # optional
    # The base URL hosting Octopus Deploy (i.e. "https://octopus.example.com/"). It is recommended to retrieve this value from an environment variable.
    server: # optional
    # The name or ID of a space within which this command will be executed. If omitted, the default space will be used.
    space: # optional
    # A timeout value in seconds for network operations.
    timeout: # optional, default is 600
    # Use delta compression when uploading packages to Octopus Deploy.
    use_delta_compression: # optional, default is true,
    # The username used to authenticate with Octopus Deploy. You must provide an apiKey or username and password. It is strongly recommended to retrieve this value from a GitHub secret.
    username: # optional
    - name: OpenShift Login
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/oc-login@11b98b2a0c4b972c9791d58edbf378ce0f060359
  uses: redhat-actions/oc-login@v1.1
  with:
    # Openshift Server URL.
    openshift_server_url: 
    # Openshift Bearer Token. Store in a secret.
    openshift_token: # optional
    # Openshift Username. Must be used with openshift_password.
    openshift_username: # optional
    # Openshift Password. Store in a secret. Must be used with openshift_username.
    openshift_password: # optional
    # Skip TLS certificate verification when connecting to the cluster.
    insecure_skip_tls_verify: # optional, default is false
    # Contents of a Certificate Authority (.crt) file for your cluster's SSL certificate. Store in a secret.
    certificate_authority_data: # optional
    # Set current context's namespace to this, after logging in.
    namespace: # optional
    # "By default, the cluster name is masked, since it can be used to derive the server URL.
Set this to true to skip masking the cluster name."

    reveal_cluster_name: # optional, default is false
    - name: OpenShift Self Hosted Runner Installer
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/openshift-actions-runner-installer@1ae07bff8c27b2b06fbd55ef36eada3a078ac3e9
  uses: redhat-actions/openshift-actions-runner-installer@v1
  with:
    # GitHub Personal access token. The token must have the "repo" permission scope.
For organization runners, the token must also have the "admin:org" scope.

    github_pat: 
    # Repository or organization for the self-hosted runner.
For example, "redhat-actions/check-self-hosted-runner" for a repository, or "redhat-actions" for an organization.
Defaults to the current repository.

    runner_location: # optional
    # Container image to use for the runner.
    runner_image: # optional
    # Tag to use for the runner container image.
    runner_tag: # optional
    # Labels in the runners to check for.
For multiple labels, separate by comma and an optional space. For example, "label1, label2".

    runner_labels: # optional
    # Number of runner replicas to create.
    runner_replicas: # optional, default is 1
    # Optional namespace (aka project) to pass to all Helm or Kubernetes commands.

    namespace: # optional
    # Uninstall any release that matches the `helm_release_name` and `namespace` before running `helm install`.
If this is false, and the release exists, the action will fail when the `helm install` fails.

    helm_uninstall_existing: # optional, default is true
    # The Helm Release name to give the new runner release. Defaults to the repository or org name plus "-runners".
    helm_release_name: # optional
    # Any other arguments to pass to the 'helm install' command.
Separate arguments by newline. Do not use quotes - @actions/exec will do the quoting for you.

    helm_extra_args: # optional
    # Version of our Helm Chart to install. Defaults to the latest.
    helm_chart_version: # optional
    - name: Pulumi CLI Action
  # You may pin to the exact commit or the version.
  # uses: pulumi/actions@dc3e7a2411e3a04bc47ed6c5005601c2ba8753c7
  uses: pulumi/actions@v3.1.0
  with:
    # Pulumi command to run, eg. up
    command: 
    # Which stack you want to apply to, eg. dev
    stack-name: 
    # Location of your Pulumi files. Defaults to ./
    work-dir: # optional, default is ./
    # If true, a comment will be created with results
    comment-on-pr: # optional, default is false
    # Github Token
    github-token: # optional, default is ${{ github.token }}
    # A cloud URL to log in to
    cloud-url: # optional, default is 
    # Allow P resource operations to run in parallel at once (1 for no parallelism). Defaults to unbounded.
    parallel: # optional, default is 2147483647
    # Optional message to associate with the update operation
    message: # optional, default is 
    # Return an error if any changes occur during this update
    expect-no-changes: # optional
    # Display operation as a rich diff showing the overall change
    diff: # optional
    # Specify resources to replace. Multiple resources can be specified one per line
    replace: # optional
    # Specify a single resource URN to update. Other resources will not be updated. Multiple resources can be specified one per line
    target: # optional
    # Allows updating of dependent targets discovered but not specified in target.
    target-dependents: # optional, default is false
    # Perform a stack refresh as part of the operation
    refresh: # optional, default is false
    # Create the stack if it currently does not exist
    upsert: # optional, default is false
    - name: Steam - Deploy
  # You may pin to the exact commit or the version.
  # uses: game-ci/steam-deploy@c18eb6aa08a18e5c4a6c7a1affe355f4031f809e
  uses: game-ci/steam-deploy@v0.1
  with:
    # The app id within steam partner network.
    appId: # default is 
    # Description for this build.
    buildDescription: # optional
    # The username of your builder account.
    username: # default is 
    # The password of your builder account.
    password: # default is 
    # The multi-factor authentication code from steam guard, that is emailed when attempting to sign in.
    mfaCode: # optional, default is 
    - name: ServiceNow CI/CD Apply Changes
  # You may pin to the exact commit or the version.
  # uses: ServiceNow/sncicd-apply-changes@d9e560381b65fc450f8dc85b084c1a6cc40e503c
  uses: ServiceNow/sncicd-apply-changes@2.0.0
  - name: ServiceNow CI/CD Publish App
  # You may pin to the exact commit or the version.
  # uses: ServiceNow/sncicd-publish-app@42ddec239e903d885b0ec2cb911089496a278770
  uses: ServiceNow/sncicd-publish-app@2.0.0
  with:
    # Application version to publish
    version: # optional
    # Developer notes to store with the application.
    devNotes: # optional
    # Version template ( like 2.4 ).
    versionTemplate: # optional
    # exact, detect, autodetect, template
    versionFormat: # optional
    # Increment version level, should be positive or zero, Default: 1.
    incrementBy: # optional
    # If true, require appSysID instead of appScope
    isAppCustomization: # optional
    - name: ServiceNow CI/CD Install App
  # You may pin to the exact commit or the version.
  # uses: ServiceNow/sncicd-install-app@c2cd948de450aff560f8d2572255f758385996c7
  uses: ServiceNow/sncicd-install-app@2.0.0
  with:
    # Application version to install
    version: 
    # Version of the base application on which to apply the customizations
    baseAppVersion: # optional
    # Only applicable if Application Customization is active and the associated application is a higher version than the currently installed version
    autoUpgradeBaseApp: # optional
    - name: ServiceNow CI/CD Rollback App
  # You may pin to the exact commit or the version.
  # uses: ServiceNow/sncicd-rollback-app@4e322960b74926a35d60c5e321962a75c5a93249
  uses: ServiceNow/sncicd-rollback-app@2.0.0
  with:
    # Application version to rollback
    version: 
    - name: ServiceNow CI/CD Run ATF Test Suite
  # You may pin to the exact commit or the version.
  # uses: ServiceNow/sncicd-tests-run@49e9a72f68d0d1a2501d24a2cb14ed31b32a9ea8
  uses: ServiceNow/sncicd-tests-run@2.0.0
  with:
    # Name of the browser to use to run the client test. 
    browserName: # optional
    # Starting value of the version of the browser specified in browser_name to use to run the test. For example, if you enter '9', that would enable all 9.x.x.x versions
    browserVersion: # optional
    # Name of the operating system under which to run the test suite.
    osName: # optional
    # Starting value of the version of the operating system under which to run the test suite. For example, if you enter '8', that would enable all 8.x.x.x versions.
    osVersion: # optional
    # Required if testSuiteName is not specified
    testSuiteSysId: # optional
    # Required if testSuiteSysId is not specified
    testSuiteName: # optional
    - name: ServiceNow CI/CD Activate Plugin
  # You may pin to the exact commit or the version.
  # uses: ServiceNow/sncicd-plugin-activate@a12a95b41b8e026f9107d0c38f22245a5f4cf8d7
  uses: ServiceNow/sncicd-plugin-activate@2.0.0
  with:
    # Plugin ID to be installed
    pluginID: 
    - name: ServiceNow CI/CD Instance Scan
  # You may pin to the exact commit or the version.
  # uses: ServiceNow/sncicd-instance-scan@3acee37296d42bfafcb50cb04253409a83b42c44
  uses: ServiceNow/sncicd-instance-scan@2.0.0
  with:
    # Type of scan process. Can be equal to full, point, suite_combo, suite_scoped, suite_update.
    scantype: 
    # URL param if point scan type is specified.
    targetTable: # optional
    # URL param if point scan type is specified.
    targetSysId: # optional
    # URL param if suite_combo scan type is specified.
    comboSysId: # optional
    # URL param if suite_scoped or suite_update scan type is specified.
    suiteSysId: # optional
    # Payload params, comma separated(if suite_scoped or suite_update scan type is specified).
    appScopeSysIds: # optional
    # Payload params, comma separated(if suite_scoped or suite_update scan type is specified).
    updateSetSysIds: # optional
    - name: ServiceNow CI/CD Rollback Plugin
  # You may pin to the exact commit or the version.
  # uses: ServiceNow/sncicd-plugin-rollback@600e3f11252fa6690ea329d129854eed2ed3f291
  uses: ServiceNow/sncicd-plugin-rollback@2.0.0
  with:
    # Plugin ID to be rolled back
    pluginID: 
    - name: Setup Pulumi CLI
  # You may pin to the exact commit or the version.
  # uses: pulumi/setup-pulumi@b374ceb6168550de27c6eba92e01c1a774040e11
  uses: pulumi/setup-pulumi@v2.0.0
  with:
    # Version of the Pulumi CLI to install, or 'latest' (default). This accepts semver ranges like ^3.0.0.
    pulumi-version: # default is latest
    # Token used to query pulumi versions
    github-token: # default is ${{ github.token }}
    - name: oc-new-app
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/oc-new-app@d74a8e684e47a4e10b851043685e95380d62a265
  uses: redhat-actions/oc-new-app@v1
  with:
    # Name to use for generated application artifacts
    app_name: 
    # "Environment variable key-value pairs to pass to the build container at the run time.
Use the form env_name=env_value, and separate arguments with newlines."

    build_env: # optional
    # "Registry credentials file to use to create a pull secret.
Set this to "docker" or "podman" depending on which tool you used to log in"

    create_pull_secret_from: # optional
    # "The name (reference) of the image to create deployment.
It can be a container image or an image stream"

    image: 
    # "In the case of private images, provide the image pull secret if you have already created that.
Otherwise, provide inputs create_pull_secret_from or registry_hostname, registry_username and registry_password"

    image_pull_secret_name: # optional
    # The OpenShift project/Kubernetes namespace to deploy to. Defaults to current context's.
    namespace: # optional
    # "A port to expose from the application container through a Service.
If exactly one port is exposed in the container metadata, then this input can be omitted."

    port: # optional
    # The Hostname/domain of the container image registry such as quay.io, docker.io. to create pull secret
    registry_hostname: # optional
    # Registry username to use for the pull secret
    registry_username: # optional
    # Password, encrypted password, or access token of the provided registry to use for the pull secret
    registry_password: # optional
    - name: ServiceNow CI/CD Batch Install
  # You may pin to the exact commit or the version.
  # uses: ServiceNow/sncicd-batch-install@cd0fe0c6cf7d8bf5baab47c8de34f98540b67a9d
  uses: ServiceNow/sncicd-batch-install@2.0.1
  with:
    # Source of the payload(file/workflow)
    source: 
    # Filename(or a path without trailing slash) of the manifest JSON file is source equals to file(Default: now_batch_manifest.json)
    filename: # optional
    # JSON string with payload if source equals to workflow
    manifest: # optional
    - name: Kubernetes bake
  uses: Azure/k8s-bake@v1
  with:
    # Acceptable values: helm or kompose or kustomize
    renderEngine: 
    # Required if renderEngine == helm. Helm chart to bake.
    helmChart: # optional
    # Relevant if renderEngine == helm. Array of path to override files. Each path should be mentioned on a newline
    overrideFiles: # optional
    # Relevant if renderEngine == helm. Override values to set.
    overrides: # optional
    # Relevant if renderEngine == helm. Release name to be used for Helm option.
    releaseName: # optional
    # Required if renderEngine == kustomization. Path to directory or the Git repository containing kustomization.yaml file.
    kustomizationPath: # optional
    # Required if renderEngine == kompose. Path(s) to Docker compose files
    dockerComposeFile: # optional
    # Version of kubectl. Installs a specific version of helm binary
    helm-version: # optional
    # Version of kubectl. Installs a specific version of kubectl binary
    kubectl-version: # optional
    # Version of kubectl. Installs a specific version of kompose binary
    kompose-version: # optional
    # When set to true, the output of the bake command would not be shown.
    silent: # optional
    - name: Azure Pipelines Action
  uses: Azure/pipelines@v1
  with:
    # Fullyqualified URL to the Azure DevOps organization along with project name(eg, https://dev.azure.com/organization/project-name or https://server.example.com:8080/tfs/DefaultCollection/project-name)
    azure-devops-project-url: 
    # Name of the Azure Pipline to be triggered
    azure-pipeline-name: 
    # Paste personal access token of the user as value of secret variable:AZURE_DEVOPS_TOKEN
    azure-devops-token: 
    - name: Create secret in Kubernetes cluster
  uses: Azure/k8s-create-secret@v1.1
  with:
    # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
    namespace: # optional
    # Container registry url
    container-registry-url: # optional
    # Container registry username
    container-registry-username: # optional
    # Container registry password
    container-registry-password: # optional
    # Container registry email
    container-registry-email: # optional
    # Type of Kubernetes secret. For example, docker-registry or generic
    secret-type: # default is docker-registry
    # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
    secret-name: 
    # Specify keys and literal values to insert in generic type secret.For example, --from-literal=key1=value1 --from-literal=key2="top secret".
    arguments: # optional
    - name: App Service Web App Build Action
  uses: Azure/appservice-build@v2
  with:
    # Relative path (within the repository) to the source directory of the project you want to build; if no value is provided for this, the root of the repository ("GITHUB_WORKSPACE" environment variable) will be built.
    source-directory: # optional
    # Programming platform used to build the web app; if no value is provided, Oryx will determine the platform to build with. The supported values are "dotnet", "nodejs", "php" and "python".
    platform: # optional
    # Version of the programming platform used to build the web app; if no value is provided, Oryx will determine the version needed to build the repository.
    platform-version: # optional
    # The directory where the build output has to be put.
    output-directory: # optional
    - name: Azure Policy Compliance Scan
  uses: Azure/policy-compliance-scan@v0
  with:
    # Mandatory. Takes full identifier for one or more azure resources, resource groups or subscriptions. The on-demand policy compliance scan is triggered for all of these. The ID can generally be found in the properties section of the resource in Azure Portal.
    scopes: 
    # Optional. Takes full identifier for one or more azure resources, resource groups(followed by /*). If the resources are found non-compliant after the scan completion, the action fails. However, in this input you can specify resources or resource groups for which the compliance state will be ignored. The action will pass irrespective of the compliance state of these resources. In case you want the action to always pass irrespective of the compliance state of resources, you can set its value as all.
    scopes-ignore: # optional
    # Optional. Depending on the breadth, the time taken for compliance scan can range from a few minutes to several hours. By default, the action will wait for the compliance scan to complete and succeed or fail based on the compliance state of resources. However, you can mark this input as false, in which case the action will trigger the compliance scan and succeed immediately. The status of the triggered scan and the compliance state of resources would have to be then viewed in activity log of the resource in Azure portal.
    wait: # optional, default is true
    # Optional. Defaults to false. If false, the action will upload a CSV file containing a list of resources that are non-compliant after the triggered scan is complete. The CSV file can be downloaded as an artifact from the workflow run for manual analysis. Note that the number of rows in CSV are capped at 100,000.
    skip-report: # optional
    # Optional. The filename for the CSV to be uploaded. Ignored if skip-report is set to true.
    report-name: # optional
    - name: Manage Azure Policy
  uses: Azure/manage-azure-policy@v0
  with:
    # mandatory. The path(s) to the directory that contains Azure policy files. The files present only in these directories  will be considered by this action for updating policies in Azure. You can use wild card characters as mentioned * or ** for specifying sub folders in a path. For more details on the use of the wild cards check [glob wildcard patterns](https://github.com/isaacs/node-glob#glob-primer). Note that a definition file should be named as policy.json and assignment filenames should start with assign keyword.
    paths: 
    # Optional. These are the directory paths that will be ignored by the action. If you have a specific policy folder that is not ready to be applied yet, specify the path here. Note that ignore-paths has a higher precedence compared to paths parameter.
    ignore-paths: # optional
    # Optional. These are policy assignment files that would be considered by the action. This parameter is especially useful if you want to apply only those assignments that correspond to a specific environment for following a safe deployment practice. E.g. _assign.AllowedVMSKUs-dev-rg.json_. You can use wild card character * to match multiple file names. E.g. _assign.\*dev\*.json_. If this parameter is not specified, the action will consider all assignment files that are present in the directories mentioned in paths parameter.
    assignments: # optional
    # Optional. There are 2 modes for this action - _incremental_ and _complete_. If not specified, the action will use incremental mode by default. In incremental mode, the action will compare already exisiting policy in azure with the contents of policy provided in repository file. It will apply the policy only if there is a mismatch. On the contrary, the complete mode will apply all the files present in the specified paths irrespective of whether or not repository policy file has been updated.
    mode: # optional
    - name: Build Azure Virtual Machine Image
  uses: Azure/build-vm-image@v0
  with:
    # This is the Azure region in which the Image Builder will run.
    location: # optional
    # This is the Resource Group where the temporary Imagebuilder Template resource will be created.
    resource-group-name: 
    # The name of the image builder template resource to be used for creating and running the Image builder service.
    image-builder-template-name: # optional
    # The value is an integer which is used as timeout in minutes for running the image build.
    build-timeout-in-minutes: # optional, default is 240
    # You can override the VM size, from the default value i.e. Standard_D1_v2.
    vm-size: # optional, default is Standard_D1_v2
    # The identity that will be used to do the role assignment and resource creation
    managed-identity: # optional
    # [ PlatformImage | SharedImageGallery | ManagedImage ]
    source-image-type: # optional, default is PlatformImage
    # OS types supported: [ linux | windows ].
    source-os-type: 
    # Value of source-image supported by Azure Image Builder.
    source-image: # optional
    # This takes the path to a directory or a file in the runner. By default, it points to the default download directory of the github runner.
    customizer-source: # optional
    # The customer can enter multi inline powershell or shell commands and use variables to point to directories inside the downloaded location.
    customizer-script: # optional
    # The value is boolean and set to false by default. This value is for Windows images only, the image builder will run Windows Update at the end of the customizations and also handle the reboots it requires.
    customizer-windows-update: # optional
    # ManagedImage | SharedImageGallery | VHD
    dist-type: # optional, default is ManagedImage
    # Image Resource Id to be created by AIB
    dist-resource-id: # optional
    # location of Image created by AIB
    dist-location: # optional
    # Every Image builder run is identified with a unique run id.
    run-output-name: # optional
    # The values set will be used to set the user defined tags on the custom image artifact created.
    dist-image-tags: # optional
    - name: Azure PostgreSQL Action
  uses: Azure/postgresql@v1
  with:
    # Server name of Azure DB for PostgreSQL. Example: fabrikam.postgres.database.azure.com
    server-name: 
    # The connection string, including authentication information, for the Azure PostgreSQL Server. Please provide psql connection string. Example: psql "host={host} port={port} dbname={your_database} user={user} password={your_password} sslmode=require"
    connection-string: 
    # Path to PL/SQL script file to deploy. To specify multiple files, use the regex syntax : *.sql or folder/x/<regex>.sql
    plsql-file: 
    # Additional options supported by postgresql simple SQL shell. These options will be applied when executing the given file on the Azure DB for Postgresql. In case of multiple files, the same args will be applied for all files
    arguments: # optional
    - name: Azure MYSQL Deploy
  uses: Azure/mysql@v1
  with:
    # Server name of Azure DB for Mysql. Example: fabrikam.mysql.database.azure.com. When you connect using Mysql Workbench, this is the same value that is used for Hostname in Parameters
    server-name: 
    # The connection string, including authentication information, for the Azure MySQL Server. (deprecated)
    connection-string: # optional
    # Azure MySQL Server username for login
    username: # optional
    # Azure MySQL Server password for login
    password: # optional
    # Azure MySQL Server database (optional) to connect to. No database will be used automatically.
    database: # optional
    # Path to SQL script file to deploy
    sql-file: 
    # Additional options supported by mysql simple SQL shell. These options will be applied when executing the given file on the Azure DB for Mysql.
    arguments: # optional
    - name: Azure App Configuration Sync
  uses: Azure/AppConfiguration-Sync@v1.1.1
  with:
    # Path to the configuration file in the repo, relative to the repo root. Also supports glob patterns and multiple files
    configurationFile: 
    # Format of the configuration file. Valid values are: json, yaml, properties
    format: 
    # Connection string for the App Configuration instance
    connectionString: 
    # Separator used when flattening the configuration file to key-value pairs
    separator: 
    # Specifies whether to use a strict sync which will make the App Configuration instance exactly match the configuration file (deleting key-values not in the configuration file). Defaults to false
    strict: # optional
    # Prefix that will be added to the front of the keys
    prefix: # optional
    # Label to use when setting the key-value pairs. If not specified, a null label will be used
    label: # optional
    # Max depth (positive number) for flattening the configuration file
    depth: # optional
    # Stringified form of a JSON object with the following shape: { [propertyName: string]: string; }
    tags: # optional
    # Content type associated with the values
    contentType: # optional
    
    - name: Azure PowerShell Action
  uses: Azure/powershell@v1
  with:
    # Specify the Az PowerShell script here.
    inlineScript: 
    # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
    azPSVersion: 
    # Select the value of the ErrorActionPreference variable for executing the script. Options: stop, continue, silentlyContinue. Default is Stop.
    errorActionPreference: # optional, default is Stop
    # If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream.
    failOnStandardError: # optional, default is false
    # Used to pull Az module from Azure/az-ps-module-versions.  Since there's a default, this is typically not supplied by the user.
    githubToken: # optional, default is ${{ github.token }}
    - name: Azure Login
  uses: Azure/login@v1
  with:
    # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
    creds: 
    # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
    enable-AzPSSession: # optional
    # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
    environment: # optional, default is azurecloud
    # Set this value to true to enable support for accessing tenants without subscriptions
    allow-no-subscriptions: # optional
    - name: Azure CLI Action
  uses: Azure/cli@1.0.4
  with:
    # Specify the script here
    inlineScript: 
    # Azure CLI version to be used to execute the script. If not provided, latest version is used
    azcliversion: # optional, default is latest
    - name: Azure CLI Action
  uses: Azure/cli@1.0.4
  with:
    # Specify the script here
    inlineScript: 
    # Azure CLI version to be used to execute the script. If not provided, latest version is used
    azcliversion: # optional, default is latest
    - name: Azure App Service Settings
  uses: Azure/appservice-settings@v1
  with:
    # Name of the Azure Web App
    app-name: 
    # Name of an existing slot other than the production slot. Default value is production
    slot-name: # optional
    # Application settings using the JSON syntax set as value of secret variable: APP_SETTINGS
    app-settings-json: # optional
    # Connection Strings using the JSON syntax set as value of secret variable: CONNECTION_STRINGS
    connection-strings-json: # optional
    # General configuration settings using dictionary syntax - Key Value pairs
    general-settings-json: # optional
    # Set it to false if you want to provide input jsons as plain text/you do not want input json values to be masked. This will apply to all input jsons. Default is true
    mask-inputs: # optional, default is true
    - name: Deploy to Kubernetes cluster
  uses: Azure/k8s-deploy@v1.3
  with:
    # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
    namespace: # optional
    # Path to the manifest files which will be used for deployment.
    manifests: # default is 
    # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
    images: # optional
    # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
    imagepullsecrets: # optional
    # Version of kubectl. Installs a specific version of kubectl binary
    kubectl-version: # optional
    # Deployment strategy to be used. Allowed values are none, canary and blue-green
    strategy: # optional, default is none
    # Route based on service, ingress or SMI for blue-green strategy
    route-method: # optional, default is service
    # Indicates the buffer time in minutes before the switch is made to the green version (max is 300 min ie. 5hrs)
    version-switch-buffer: # optional, default is 0
    # Traffic split method to be used. Allowed values are pod, smi
    traffic-split-method: # optional, default is pod
    # Baseline and canary replicas count; valid value i.e between 0 to 100.
    baseline-and-canary-replicas: # optional, default is 0
    # Percentage of traffic redirect to canary deployment
    percentage: # optional, default is 0
    # Arguments
    args: # optional
    # deploy/promote/reject
    action: # default is deploy
    # Deploy when a previous deployment already exists. If true then --force argument is added to the apply command
    force: # optional
    # Github token
    token: # default is ${{ github.token }}
    - name: Deploy Azure Resource Manager (ARM) Template
  uses: Azure/arm-deploy@v1
  with:
    # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'managementgroup', 'subscription'
    scope: 
    # Override the Subscription Id set by Azure Login.
    subscriptionId: # optional
    # Specify the Id for the Management Group, only required for Management Group Deployments.
    managementGroupId: # optional
    # Provide the target region, only required for management Group or Subscription deployments.
    region: # optional
    # Provide the name of a resource group, only required for resource Group deployments.
    resourceGroupName: # optional
    # Specify the path or URL to the Azure Resource Manager template.
    template: 
    # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
    deploymentMode: # optional
    # Specifies the name of the resource group deployment to create.
    deploymentName: # optional
    # Supply deployment parameter values.
    parameters: # optional
    - name: Azure Static Web Apps Deploy
  uses: Azure/static-web-apps-deploy@v1
  with:
    # Action to perform
    action: 
    # Directory location of the application source code
    app_location: 
    # Required token
    azure_static_web_apps_api_token: 
    # Custom command for Oryx to run when building Azure Functions source code
    api_build_command: # optional
    # Directory location of the Azure Functions source code
    api_location: # optional
    # Identical in use to output_location
    app_artifact_location: # optional
    # Directory location of the compiled application code after building
    output_location: # optional
    # Custom command for Oryx to run when building application source code
    app_build_command: # optional
    # Token for interacting with the Github repository. Currently used only for commenting on Pull Requests.
    repo_token: # optional
    # Directory location where the routes.json file can be found in the source code
    routes_location: # optional
    # Skips the build step for the application source code if set to true.
    skip_app_build: # optional
    - name: Kubernetes set context
  uses: Azure/k8s-set-context@v1.1
  with:
    # Acceptable values: generic or arc
    cluster-type: # default is generic
    # Acceptable values: kubeconfig or service-account or service-principal
    method: # default is kubeconfig
    # Kubernetes Config
    kubeconfig: # optional, default is 
    # If your kubeconfig has multiple contexts, use this field to use a specific context, otherwise the default one would be chosen
    context: # optional, default is 
    # Cluster Url
    k8s-url: # optional, default is 
    # Service account secret. Run kubectl get serviceaccounts <service-account-name> -o yaml and copy the service-account-secret-name. Copy the ouptut of kubectl get secret <service-account-secret-name> -o yaml
    k8s-secret: # optional, default is 
    # Token extracted from the secret of service account (should be base 64 decoded)
    token: # optional, default is 
    # Azure resource group name
    resource-group: # optional, default is 
    # Azure connected cluster name
    cluster-name: # optional, default is 
    - name: Azure Functions Container Action
  uses: Azure/functions-container-action@v1.1.0
  with:
    # Name of the Azure Function App
    app-name: 
    # Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'.
    image: 
    # Enter the start up command. For ex. 'dotnet run' or '/azure-functions-host/Microsoft.Azure.WebJobs.Script.WebHost'
    container-command: # optional
    # Function app slot to be deploy to
    slot-name: # optional
    - name: Azure WebApp
  uses: Azure/webapps-deploy@v2
  with:
    # Name of the Azure Web App
    app-name: 
    # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
    publish-profile: # optional
    # Enter an existing Slot other than the Production slot
    slot-name: # optional, default is production
    # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
    package: # optional, default is .
    # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
    images: 
    # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
    configuration-file: # optional
    # Enter the start up command. For ex. dotnet run or dotnet run
    startup-command: # optional
    - name: Azure Functions Action
  uses: Azure/functions-action@v1.4.0
  with:
    # Name of the Azure Function App
    app-name: 
    # Path to package or folder. *.zip or a folder to deploy
    package: # optional, default is .
    # Function app slot to be deploy to
    slot-name: # optional
    # Publish profile (*.publishsettings) file contents with web deploy secrets
    publish-profile: # optional
    # Automatically look up Java function app artifact from pom.xml (default: 'false'). When this is set to 'true', 'package' should point to the folder of host.json.
    respect-pom-xml: # optional, default is false
    # Remove unwanted files defined in .funcignore file (default: 'false'). When this is set to 'true', 'package' should point to the folder of host.json.
    respect-funcignore: # optional, default is false
    # Enable build action from Kudu when the package is deployed onto the function app. This will temporarily change the SCM_DO_BUILD_DURING_DEPLOYMENT setting for this deployment. To bypass this and use the existing settings from your function app, please set this to an empty string ''. To enable remote build for your project, please set this and 'enable-oryx-build' both to 'true'. By default, GitHub Action respects the packages resolved in GitHub workflow, disabling the redundant build action from Kudu endpoint. (default: 'false').
    scm-do-build-during-deployment: # optional, default is false
    # Use Oryx Build from Kudu when the package is deployed onto the function app. (Linux functions only). This will temporarily change the ENABLE_ORYX_BUILD setting from this deployment. To bypass this and use the existing settings from your function app, please set this to an empty string ''. To enable remote build for your project, please set this and 'scm-do-build-during-deployment' both to 'true'. By default, GitHub Action respects the packages resolved in GitHub workflow, disabling the redundant build action from Kudu endpoint. (default: 'false').
    enable-oryx-build: # optional, default is false
    - name: Synapse workspace deployment
  uses: Azure/Synapse-workspace-deployment@v0.2
  with:
    # Provide the Synapse workspace name where you want to deploy the artifacts.
    TargetWorkspaceName: 
    # Specify the path to the workspace artifacts template.
    TemplateFile: 
    # Specify the path to the template parameter file.
    ParametersFile: 
    # Specify deployment parameter values.
    OverrideArmParameters: # optional, default is 
    # Provide the type of cloud environment. Valid values are: Azure Public, Azure China, Azure US Government, Azure Germany
    Environment: 
    # Provide the resource group of the target Synapse workspace.
    resourceGroup: 
    # Provide client id of service principal.
    clientId: 
    # Provide client secret of the service principal.
    clientSecret: 
    # Provide subscription id.
    subscriptionId: 
    # Provide tenant id.
    tenantId: 
    # Provide Active Directory Endpoint.
    activeDirectoryEndpointUrl: 
    # Provide Resource Manager Endpoint.
    resourceManagerEndpointUrl: 
    - name: Push to master
  # You may pin to the exact commit or the version.
  # uses: tcitry/push-to-master@17c179699110423dcc7db2d9ddfe3481cf0da596
  uses: tcitry/push-to-master@v1.0
  - name: Push to master
  # You may pin to the exact commit or the version.
  # uses: tcitry/push-to-master@17c179699110423dcc7db2d9ddfe3481cf0da596
  uses: tcitry/push-to-master@v1.0
  - name: Push to master
  # You may pin to the exact commit or the version.
  # uses: tcitry/push-to-master@17c179699110423dcc7db2d9ddfe3481cf0da596
  uses: tcitry/push-to-master@v1.0
    - name: Push to master
  # You may pin to the exact commit or the version.
  # uses: tcitry/push-to-master@17c179699110423dcc7db2d9ddfe3481cf0da596
  uses: tcitry/push-to-master@v1.0
  - name: Deploy to Azure Container Instances
  uses: Azure/aci-deploy@v1.1.1
  with:
    # Name of the Resource Group in which the Container Instance will be created
    resource-group: 
    # The storage account access key used to access the Azure File Share
    azure-file-volume-account-key: # optional, default is 
    # The name of the storage account that contains the Azure File Share
    azure-file-volume-account-name: # optional, default is 
    # The path within the container where the Azure File Volume should be mounted. Must not contain ":"
    azure-file-volume-mount-path: # optional, default is 
    # The name of the Azure File Share to be mounted as a volume
    azure-file-volume-share-name: # optional, default is 
    # Should the Azure File Share be Mounted as Read Only. Accepted { true, false }
    azure-file-volume-read-only: # optional, default is 
    # The command line to run when the container is started, e.g. "/bin/bash -c myscript.sh"
    command-line: # optional, default is 
    # Number of CPU Cores Required
    cpu: # optional, default is 1
    # The DNS Name Label for Container with Public IP
    dns-name-label: 
    # List of environment variables for the container. Space-seperated in "key=value" format
    environment-variables: # optional, default is 
    # The target directory path in the git repository. Must not contain ".."
    gitrepo-dir: # optional, default is 
    # The path within the container where the git repo volume should be mounted. Must not contain ":"
    gitrepo-mount-path: # optional, default is 
    # The commit hash for the specified revision
    gitrepo-revision: # optional, default is 
    # The URL of a git repository to be mounted as a volume
    gitrepo-url: # optional, default is 
    # The Number of GPU Resources needed in the Container
    gpu-count: # optional, default is 
    # The SKU for the GPUs specified. Accepted Values are { K80, P100, V100 }
    gpu-sku: # optional, default is 
    # Specify the fully qualified container image name. For example, "myregistry.azurecr.io/nginx:latest" or "python:3.7.2-alpine/"
    image: 
    # IP Address type of the Container Group. Accepted Values are { Private, Public }
    ip-address: # optional, default is Public
    # Location where the Container will be deployed
    location: 
    # The Log Analytics Workspace Name or Id
    log-analytics-workspace: # optional
    # The Log Analytics Workspace Key
    log-analytics-workspace-key: # optional
    # The Log type to be used. Accepted Values are { ContainerInsights, ContainerInstanceLogs }
    log-type: # optional
    # Required Memory of the Containers in GB, accurate to one decimal place
    memory: # optional, default is 1.5
    # Name of the Container Group Instance
    name: 
    # The OS type of the Containers. Accepted Values are  { Linux, Windows }
    os-type: # optional, default is Linux
    # The Ports to Open on the Container. Space seperate the ports for multiple values
    ports: # optional, default is 80
    # The Network protocol to use. Accepted Values are { TCP, UDP }
    protocol: # optional, default is TCP
    # The container image registry login server
    registry-login-server: # optional, default is 
    # Username to log in Container Image Registry Server
    registry-username: # optional, default is 
    # Password to log in Container Image Registry Server
    registry-password: # optional, default is 
    # Restart Policy for the container(s). Accepted Values are { Always, OnFailure, Never }
    restart-policy: # optional, default is Always
    # List of secure environment variables for the container. Space seperated values in "key=value" format
    secure-environment-variables: # optional, default is 
    - name: Flic Triggered Action
  # You may pin to the exact commit or the version.
  # uses: grust101/flic_triggered_action@02cf151357637ee82d013c4dacf3a64b6a5dd6f8
  uses: grust101/flic_triggered_action@1.0
  - name: Push to master
  # You may pin to the exact commit or the version.
  # uses: tcitry/push-to-master@17c179699110423dcc7db2d9ddfe3481cf0da596
  uses: tcitry/push-to-master@v1.0
  - name: s3cmd for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: jusbrasil/github-action-s3cmd@33423cabd2a73c37ae5518d50db1ad4c3d2ca792
  uses: jusbrasil/github-action-s3cmd@1.0.0
  - name: Trigger Envoyer Deployment
  # You may pin to the exact commit or the version.
  # uses: nerdify/envoyer-action@898c858ced062e8641816a2a8ed257abfb5491d1
  uses: nerdify/envoyer-action@1.0.0
  - name: Publish Hugo Site
  # You may pin to the exact commit or the version.
  # uses: tcitry/publish-hugo-site@b39b3c37d0e183bc70f8736869200846ffb1458c
  uses: tcitry/publish-hugo-site@v1.0
  - name: SCP Files
  # You may pin to the exact commit or the version.
  # uses: appleboy/scp-action@b476d5806f2a4c1ed5902a87fa91b0623cac7258
  uses: appleboy/scp-action@v0.0.1
  - name: GitHub Action to Push Subdirectories to Another Repo
  # You may pin to the exact commit or the version.
  # uses: johno/actions-push-subdirectories@5d36299d310cf771736a82ada7708d5c328526e9
  uses: johno/actions-push-subdirectories@v0.0.1
  - name: Bugsnag build reporting
  # You may pin to the exact commit or the version.
  # uses: sazap10/bugsnag-builds-action@253d21a34e46c41af96987f5f62a3bd6bcce1c68
  uses: sazap10/bugsnag-builds-action@v1.0.3
  - name: Trigger GitLab CI
  # You may pin to the exact commit or the version.
  # uses: appleboy/gitlab-ci-action@d44d4e7f04217b22b2a2481a3c646998bf18c10e
  uses: appleboy/gitlab-ci-action@0.0.1
  - name: Trigger Jenkins Job
  # You may pin to the exact commit or the version.
  # uses: appleboy/jenkins-action@b9936d50c66383ffb58f3504c6e1348d94425c59
  uses: appleboy/jenkins-action@0.0.1
  - name: action-push
  # You may pin to the exact commit or the version.
  # uses: ludeeus/action-push@0b7c1175655379c008f42bbaf524caa79cf89ec1
  uses: ludeeus/action-push@0.0.1
  - name: GitHub Action for WP Engine Git Deployment
  # You may pin to the exact commit or the version.
  # uses: jovrtn/github-action-wpengine-git-deploy@78e43d6eea9f4e870dfa9501625000e87022fa63
  uses: jovrtn/github-action-wpengine-git-deploy@0.1.2
  - name: GitHub Action for NPM/Chrome
  # You may pin to the exact commit or the version.
  # uses: daleobrien/npm-with-chrome-browser-action@dfe13b04e9f0fcea5e77f1e1692487282bca0970
  uses: daleobrien/npm-with-chrome-browser-action@v1.0.1
  - name: fission
  # You may pin to the exact commit or the version.
  # uses: fission/action@e19f321445e3b4d4d222851eb5a08de22129e024
  uses: fission/action@v1.0.0
  - name: Bash for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: jcblw/bash@7bad2d963d87fdb2276647306e579de3df2c6000
  uses: jcblw/bash@1.0.0
  
  
  
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
    
    
    
    
    
    
    
  
    
  
    
    
    
    
    
    
    
  
    
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
  
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
  
    
    
  
    
  
    
    
    
    
    
    
    
    
    
    
  
  
    
    
  
  
  
    
    
  
  
  
  
  
    
  
    
    
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
